import {
  __commonJS
} from "./chunk-J43GMYXM.js";

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key}" in client code.`);
        }
      }
    }));
  }
});

// ../node_modules/Deta/dist/index.browser.js
var require_index_browser = __commonJS({
  "../node_modules/Deta/dist/index.browser.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self).deta = {});
    }(exports, function(e) {
      "use strict";
      var t = function() {
        return (t = Object.assign || function(e2) {
          for (var t2, r2 = 1, n2 = arguments.length; r2 < n2; r2++)
            for (var o2 in t2 = arguments[r2])
              Object.prototype.hasOwnProperty.call(t2, o2) && (e2[o2] = t2[o2]);
          return e2;
        }).apply(this, arguments);
      };
      function r(e2, t2, r2, n2) {
        return new (r2 || (r2 = Promise))(function(o2, i2) {
          function s2(e3) {
            try {
              u2(n2.next(e3));
            } catch (e4) {
              i2(e4);
            }
          }
          function a2(e3) {
            try {
              u2(n2.throw(e3));
            } catch (e4) {
              i2(e4);
            }
          }
          function u2(e3) {
            var t3;
            e3.done ? o2(e3.value) : (t3 = e3.value, t3 instanceof r2 ? t3 : new r2(function(e4) {
              e4(t3);
            })).then(s2, a2);
          }
          u2((n2 = n2.apply(e2, t2 || [])).next());
        });
      }
      function n(e2, t2) {
        var r2, n2, o2, i2, s2 = { label: 0, sent: function() {
          if (1 & o2[0])
            throw o2[1];
          return o2[1];
        }, trys: [], ops: [] };
        return i2 = { next: a2(0), throw: a2(1), return: a2(2) }, "function" == typeof Symbol && (i2[Symbol.iterator] = function() {
          return this;
        }), i2;
        function a2(i3) {
          return function(a3) {
            return function(i4) {
              if (r2)
                throw new TypeError("Generator is already executing.");
              for (; s2; )
                try {
                  if (r2 = 1, n2 && (o2 = 2 & i4[0] ? n2.return : i4[0] ? n2.throw || ((o2 = n2.return) && o2.call(n2), 0) : n2.next) && !(o2 = o2.call(n2, i4[1])).done)
                    return o2;
                  switch (n2 = 0, o2 && (i4 = [2 & i4[0], o2.value]), i4[0]) {
                    case 0:
                    case 1:
                      o2 = i4;
                      break;
                    case 4:
                      return s2.label++, { value: i4[1], done: false };
                    case 5:
                      s2.label++, n2 = i4[1], i4 = [0];
                      continue;
                    case 7:
                      i4 = s2.ops.pop(), s2.trys.pop();
                      continue;
                    default:
                      if (!(o2 = s2.trys, (o2 = o2.length > 0 && o2[o2.length - 1]) || 6 !== i4[0] && 2 !== i4[0])) {
                        s2 = 0;
                        continue;
                      }
                      if (3 === i4[0] && (!o2 || i4[1] > o2[0] && i4[1] < o2[3])) {
                        s2.label = i4[1];
                        break;
                      }
                      if (6 === i4[0] && s2.label < o2[1]) {
                        s2.label = o2[1], o2 = i4;
                        break;
                      }
                      if (o2 && s2.label < o2[2]) {
                        s2.label = o2[2], s2.ops.push(i4);
                        break;
                      }
                      o2[2] && s2.ops.pop(), s2.trys.pop();
                      continue;
                  }
                  i4 = t2.call(e2, s2);
                } catch (e3) {
                  i4 = [6, e3], n2 = 0;
                } finally {
                  r2 = o2 = 0;
                }
              if (5 & i4[0])
                throw i4[1];
              return { value: i4[0] ? i4[1] : void 0, done: true };
            }([i3, a3]);
          };
        }
      }
      var o = { BASE: "https://:host/v1/:project_id/:base_name", DRIVE: "https://:host/v1/:project_id/:drive_name" };
      var i, s, a = { base: function(e2) {
        var t2 = (null == e2 ? void 0 : e2.trim()) || (null === "" ? void 0 : "".trim()) || "database.deta.sh";
        return o.BASE.replace(":host", t2);
      }, drive: function(e2) {
        var t2 = (null == e2 ? void 0 : e2.trim()) || (null === "" ? void 0 : "".trim()) || "drive.deta.sh";
        return o.DRIVE.replace(":host", t2);
      } };
      !function(e2) {
        e2[e2.AuthToken = 0] = "AuthToken", e2[e2.ProjectKey = 1] = "ProjectKey";
      }(i || (i = {})), function(e2) {
        e2.Put = "PUT", e2.Get = "GET", e2.Post = "POST", e2.Patch = "PATCH", e2.Delete = "DELETE";
      }(s || (s = {}));
      var u = function() {
        function e2(e3, t2, r2) {
          this.requestConfig = { baseURL: r2, headers: t2 === i.AuthToken ? { Authorization: e3 } : { "X-API-Key": e3 } };
        }
        return e2.prototype.put = function(o2, i2) {
          return r(this, void 0, void 0, function() {
            return n(this, function(r2) {
              return [2, e2.fetch(o2, t(t({}, this.requestConfig), { body: i2, method: s.Put }))];
            });
          });
        }, e2.prototype.delete = function(o2, i2) {
          return r(this, void 0, void 0, function() {
            return n(this, function(r2) {
              return [2, e2.fetch(o2, t(t({}, this.requestConfig), { body: i2, method: s.Delete }))];
            });
          });
        }, e2.prototype.get = function(o2, i2) {
          return r(this, void 0, void 0, function() {
            return n(this, function(r2) {
              return [2, e2.fetch(o2, t(t({}, this.requestConfig), { method: s.Get, blobResponse: null == i2 ? void 0 : i2.blobResponse }))];
            });
          });
        }, e2.prototype.post = function(o2, i2) {
          return r(this, void 0, void 0, function() {
            return n(this, function(r2) {
              return [2, e2.fetch(o2, t(t({}, this.requestConfig), { body: i2.payload, method: s.Post, headers: t(t({}, this.requestConfig.headers), i2.headers) }))];
            });
          });
        }, e2.prototype.patch = function(o2, i2) {
          return r(this, void 0, void 0, function() {
            return n(this, function(r2) {
              return [2, e2.fetch(o2, t(t({}, this.requestConfig), { body: i2, method: s.Patch }))];
            });
          });
        }, e2.fetch = function(e3, o2) {
          var i2, s2;
          return r(this, void 0, void 0, function() {
            var r2, a2, u2, c2, l2, p2, d2, f2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  return n2.trys.push([0, 7, , 8]), r2 = o2.body instanceof Uint8Array ? o2.body : JSON.stringify(o2.body), a2 = (null === (i2 = null == o2 ? void 0 : o2.headers) || void 0 === i2 ? void 0 : i2["Content-Type"]) || "application/json", u2 = t(t({}, o2.headers), { "Content-Type": a2 }), [4, fetch("" + o2.baseURL + e3, { body: r2, headers: u2, method: o2.method })];
                case 1:
                  return (c2 = n2.sent()).ok ? [3, 3] : [4, c2.json()];
                case 2:
                  return l2 = n2.sent(), p2 = (null === (s2 = null == l2 ? void 0 : l2.errors) || void 0 === s2 ? void 0 : s2[0]) || "Something went wrong", [2, { status: c2.status, error: new Error(p2) }];
                case 3:
                  return o2.blobResponse ? [4, c2.blob()] : [3, 5];
                case 4:
                  return d2 = n2.sent(), [2, { status: c2.status, response: d2 }];
                case 5:
                  return [4, c2.json()];
                case 6:
                  return f2 = n2.sent(), [2, { status: c2.status, response: f2 }];
                case 7:
                  return n2.sent(), [2, { status: 500, error: new Error("Something went wrong") }];
                case 8:
                  return [2];
              }
            });
          });
        }, e2;
      }(), c = { PUT_ITEMS: "/items", QUERY_ITEMS: "/query", INSERT_ITEMS: "/items", GET_ITEMS: "/items/:key", PATCH_ITEMS: "/items/:key", DELETE_ITEMS: "/items/:key" }, l = { GET_FILE: "/files/download?name=:name", DELETE_FILES: "/files", LIST_FILES: "/files?prefix=:prefix&recursive=:recursive&limit=:limit&last=:last", INIT_CHUNK_UPLOAD: "/uploads?name=:name", UPLOAD_FILE_CHUNK: "/uploads/:uid/parts?name=:name&part=:part", COMPLETE_FILE_UPLOAD: "/uploads/:uid?name=:name" };
      function p(e2) {
        return "[object Object]" === Object.prototype.toString.call(e2);
      }
      var d, f = function() {
        function e2(e3) {
          this.date = e3 || new Date();
        }
        return e2.prototype.addSeconds = function(e3) {
          return this.date = new Date(this.date.getTime() + 1e3 * e3), this;
        }, e2.prototype.getEpochSeconds = function() {
          return Math.floor(this.date.getTime() / 1e3);
        }, e2;
      }();
      function h(e2) {
        return "number" == typeof e2;
      }
      !function(e2) {
        e2.Set = "set", e2.Trim = "trim", e2.Increment = "increment", e2.Append = "append", e2.Prepend = "prepend";
      }(d || (d = {}));
      var v = function(e2, t2) {
        this.operation = e2, this.value = t2;
      };
      function y(e2) {
        return null == e2;
      }
      var m = function() {
        function e2() {
        }
        return e2.prototype.trim = function() {
          return new v(d.Trim);
        }, e2.prototype.increment = function(e3) {
          return void 0 === e3 && (e3 = 1), new v(d.Increment, e3);
        }, e2.prototype.append = function(e3) {
          return new v(d.Append, Array.isArray(e3) ? e3 : [e3]);
        }, e2.prototype.prepend = function(e3) {
          return new v(d.Prepend, Array.isArray(e3) ? e3 : [e3]);
        }, e2;
      }();
      function w(e2, t2) {
        return y(e2) && y(t2) ? {} : y(e2) || y(t2) ? y(e2) ? h(t2) || t2 instanceof Date ? t2 instanceof Date ? { ttl: new f(t2).getEpochSeconds() } : { ttl: t2 } : { error: new Error("option expireAt should have a value of type number or Date") } : h(e2) ? { ttl: new f().addSeconds(e2).getEpochSeconds() } : { error: new Error("option expireIn should have a value of type number") } : { error: new Error("can't set both expireIn and expireAt options") };
      }
      var E = "__expires", b = function() {
        function e2(e3, t2, r2, n2, o2) {
          var i2 = a.base(o2).replace(":base_name", n2).replace(":project_id", r2);
          this.requests = new u(e3, t2, i2), this.util = new m();
        }
        return e2.prototype.put = function(e3, o2, i2) {
          var s2, a2;
          return r(this, void 0, void 0, function() {
            var r2, u2, l2, d2, f2, h2, v2, m2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (r2 = w(null == i2 ? void 0 : i2.expireIn, null == i2 ? void 0 : i2.expireAt), u2 = r2.ttl, l2 = r2.error)
                    throw l2;
                  return d2 = [t(t(t({}, p(e3) ? e3 : { value: e3 }), o2 && { key: o2 }), !y(u2) && (m2 = {}, m2[E] = u2, m2))], [4, this.requests.put(c.PUT_ITEMS, { items: d2 })];
                case 1:
                  if (f2 = n2.sent(), h2 = f2.response, v2 = f2.error)
                    throw v2;
                  return [2, (null === (a2 = null === (s2 = null == h2 ? void 0 : h2.processed) || void 0 === s2 ? void 0 : s2.items) || void 0 === a2 ? void 0 : a2[0]) || null];
              }
            });
          });
        }, e2.prototype.get = function(e3) {
          return r(this, void 0, void 0, function() {
            var t2, r2, o2, i2, s2, a2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (!(t2 = null == e3 ? void 0 : e3.trim()))
                    throw new Error("Key is empty");
                  return r2 = encodeURIComponent(t2), [4, this.requests.get(c.GET_ITEMS.replace(":key", r2))];
                case 1:
                  if (o2 = n2.sent(), i2 = o2.status, s2 = o2.response, (a2 = o2.error) && 404 !== i2)
                    throw a2;
                  return 200 === i2 ? [2, s2] : [2, null];
              }
            });
          });
        }, e2.prototype.delete = function(e3) {
          return r(this, void 0, void 0, function() {
            var t2, r2, o2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (!(t2 = null == e3 ? void 0 : e3.trim()))
                    throw new Error("Key is empty");
                  return r2 = encodeURIComponent(t2), [4, this.requests.delete(c.DELETE_ITEMS.replace(":key", r2))];
                case 1:
                  if (o2 = n2.sent().error)
                    throw o2;
                  return [2, null];
              }
            });
          });
        }, e2.prototype.insert = function(e3, o2, i2) {
          return r(this, void 0, void 0, function() {
            var r2, s2, a2, u2, l2, d2, f2, h2, v2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (r2 = w(null == i2 ? void 0 : i2.expireIn, null == i2 ? void 0 : i2.expireAt), s2 = r2.ttl, a2 = r2.error)
                    throw a2;
                  return u2 = t(t(t({}, p(e3) ? e3 : { value: e3 }), o2 && { key: o2 }), !y(s2) && ((v2 = {})[E] = s2, v2)), [4, this.requests.post(c.INSERT_ITEMS, { payload: { item: u2 } })];
                case 1:
                  if (l2 = n2.sent(), d2 = l2.status, f2 = l2.response, (h2 = l2.error) && 409 === d2)
                    throw new Error("Item with key " + o2 + " already exists");
                  if (h2)
                    throw h2;
                  return [2, f2];
              }
            });
          });
        }, e2.prototype.putMany = function(e3, o2) {
          return r(this, void 0, void 0, function() {
            var r2, i2, s2, a2, u2, l2, d2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (!(e3 instanceof Array))
                    throw new Error("Items must be an array");
                  if (!e3.length)
                    throw new Error("Items can't be empty");
                  if (e3.length > 25)
                    throw new Error("We can't put more than 25 items at a time");
                  if (r2 = w(null == o2 ? void 0 : o2.expireIn, null == o2 ? void 0 : o2.expireAt), i2 = r2.ttl, s2 = r2.error)
                    throw s2;
                  return a2 = e3.map(function(e4) {
                    var r3, n3 = p(e4) ? e4 : { value: e4 };
                    return t(t({}, n3), !y(i2) && ((r3 = {})[E] = i2, r3));
                  }), [4, this.requests.put(c.PUT_ITEMS, { items: a2 })];
                case 1:
                  if (u2 = n2.sent(), l2 = u2.response, d2 = u2.error)
                    throw d2;
                  return [2, l2];
              }
            });
          });
        }, e2.prototype.update = function(e3, o2, i2) {
          return r(this, void 0, void 0, function() {
            var r2, s2, a2, u2, l2, p2, f2, h2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (!(r2 = null == o2 ? void 0 : o2.trim()))
                    throw new Error("Key is empty");
                  if (s2 = w(null == i2 ? void 0 : i2.expireIn, null == i2 ? void 0 : i2.expireAt), a2 = s2.ttl, u2 = s2.error)
                    throw u2;
                  return l2 = { set: t({}, !y(a2) && (h2 = {}, h2[E] = a2, h2)), increment: {}, append: {}, prepend: {}, delete: [] }, Object.entries(e3).forEach(function(e4) {
                    var t2 = e4[0], r3 = e4[1], n3 = r3 instanceof v ? r3 : new v(d.Set, r3), o3 = n3.operation, i3 = n3.value;
                    switch (o3) {
                      case d.Trim:
                        l2.delete.push(t2);
                        break;
                      default:
                        l2[o3][t2] = i3;
                    }
                  }), p2 = encodeURIComponent(r2), [4, this.requests.patch(c.PATCH_ITEMS.replace(":key", p2), l2)];
                case 1:
                  if (f2 = n2.sent().error)
                    throw f2;
                  return [2, null];
              }
            });
          });
        }, e2.prototype.fetch = function(e3, t2) {
          return void 0 === e3 && (e3 = []), r(this, void 0, void 0, function() {
            var r2, o2, i2, s2, a2, u2, l2, p2, d2, f2, h2, v2, y2, m2, w2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  return o2 = (r2 = t2 || {}).limit, i2 = void 0 === o2 ? 1e3 : o2, s2 = r2.last, a2 = void 0 === s2 ? "" : s2, u2 = r2.desc, l2 = void 0 !== u2 && u2 ? "desc" : "", p2 = { query: Array.isArray(e3) ? e3 : [e3], limit: i2, last: a2, sort: l2 }, [4, this.requests.post(c.QUERY_ITEMS, { payload: p2 })];
                case 1:
                  if (d2 = n2.sent(), f2 = d2.response, h2 = d2.error)
                    throw h2;
                  return v2 = f2.items, y2 = f2.paging, m2 = y2.size, w2 = y2.last, [2, { items: v2, count: m2, last: w2 }];
              }
            });
          });
        }, e2;
      }();
      function T() {
        return "undefined" != typeof process && null != process.versions && null != process.versions.node;
      }
      var I = function() {
        function e2(e3, t2, r2, n2, o2) {
          var i2 = a.drive(o2).replace(":drive_name", n2).replace(":project_id", r2);
          this.requests = new u(e3, t2, i2);
        }
        return e2.prototype.get = function(e3) {
          return r(this, void 0, void 0, function() {
            var t2, r2, o2, i2, s2, a2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (!(t2 = null == e3 ? void 0 : e3.trim()))
                    throw new Error("Name is empty");
                  return r2 = encodeURIComponent(t2), [4, this.requests.get(l.GET_FILE.replace(":name", r2), { blobResponse: true })];
                case 1:
                  if (o2 = n2.sent(), i2 = o2.status, s2 = o2.response, a2 = o2.error, 404 === i2 && a2)
                    return [2, null];
                  if (a2)
                    throw a2;
                  return [2, s2];
              }
            });
          });
        }, e2.prototype.delete = function(e3) {
          var t2;
          return r(this, void 0, void 0, function() {
            var r2, o2, i2, s2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (!(null == e3 ? void 0 : e3.trim()))
                    throw new Error("Name is empty");
                  return r2 = { names: [e3] }, [4, this.requests.delete(l.DELETE_FILES, r2)];
                case 1:
                  if (o2 = n2.sent(), i2 = o2.response, s2 = o2.error)
                    throw s2;
                  return [2, (null === (t2 = null == i2 ? void 0 : i2.deleted) || void 0 === t2 ? void 0 : t2[0]) || e3];
              }
            });
          });
        }, e2.prototype.deleteMany = function(e3) {
          return r(this, void 0, void 0, function() {
            var t2, r2, o2, i2, s2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (!e3.length)
                    throw new Error("Names can't be empty");
                  if (e3.length > 1e3)
                    throw new Error("We can't delete more than 1000 items at a time");
                  return t2 = { names: e3 }, [4, this.requests.delete(l.DELETE_FILES, t2)];
                case 1:
                  if (r2 = n2.sent(), o2 = r2.status, i2 = r2.response, s2 = r2.error, 400 === o2 && s2)
                    throw new Error("Names can't be empty");
                  if (s2)
                    throw s2;
                  return [2, i2];
              }
            });
          });
        }, e2.prototype.list = function(e3) {
          return r(this, void 0, void 0, function() {
            var t2, r2, o2, i2, s2, a2, u2, c2, p2, d2, f2, h2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  return r2 = (t2 = e3 || {}).recursive, o2 = void 0 === r2 || r2, i2 = t2.prefix, s2 = void 0 === i2 ? "" : i2, a2 = t2.limit, u2 = void 0 === a2 ? 1e3 : a2, c2 = t2.last, p2 = void 0 === c2 ? "" : c2, [4, this.requests.get(l.LIST_FILES.replace(":prefix", s2).replace(":recursive", o2.toString()).replace(":limit", u2.toString()).replace(":last", p2))];
                case 1:
                  if (d2 = n2.sent(), f2 = d2.response, h2 = d2.error)
                    throw h2;
                  return [2, f2];
              }
            });
          });
        }, e2.prototype.put = function(e3, t2) {
          return r(this, void 0, void 0, function() {
            var r2, o2, i2, s2, a2, u2, c2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  if (!(r2 = null == e3 ? void 0 : e3.trim()))
                    throw new Error("Name is empty");
                  if (o2 = encodeURIComponent(r2), t2.path && t2.data)
                    throw new Error("Please only provide data or a path. Not both");
                  if (!t2.path && !t2.data)
                    throw new Error("Please provide data or a path. Both are empty");
                  if (t2.path && !T())
                    throw new Error("Can't use path in browser environment");
                  return i2 = new Uint8Array(), t2.path ? [4, require_fs().promises.readFile(t2.path)] : [3, 2];
                case 1:
                  s2 = n2.sent(), i2 = new Uint8Array(s2), n2.label = 2;
                case 2:
                  if (t2.data)
                    if (T() && t2.data instanceof Buffer)
                      i2 = function(e4) {
                        for (var t3 = new Uint8Array(e4.length), r3 = 0; r3 < e4.length; r3 += 1)
                          t3[r3] = e4[r3];
                        return t3;
                      }(t2.data);
                    else if ("string" == typeof (l2 = t2.data) || l2 instanceof String)
                      i2 = function(e4) {
                        for (var t3 = new Uint8Array(e4.length), r3 = 0; r3 < e4.length; r3 += 1)
                          t3[r3] = e4.charCodeAt(r3);
                        return t3;
                      }(t2.data);
                    else {
                      if (!(t2.data instanceof Uint8Array))
                        throw new Error("Unsupported data format, expected data to be one of: string | Uint8Array | Buffer");
                      i2 = t2.data;
                    }
                  return [4, this.upload(o2, i2, t2.contentType || "binary/octet-stream")];
                case 3:
                  if (a2 = n2.sent(), u2 = a2.response, c2 = a2.error)
                    throw c2;
                  return [2, u2];
              }
              var l2;
            });
          });
        }, e2.prototype.upload = function(e3, t2, o2) {
          return r(this, void 0, void 0, function() {
            var r2, i2, s2, a2, u2, c2, p2, d2, f2, h2, v2, y2, m2, w2;
            return n(this, function(n2) {
              switch (n2.label) {
                case 0:
                  return r2 = t2.byteLength, i2 = 10485760, [4, this.requests.post(l.INIT_CHUNK_UPLOAD.replace(":name", e3), { headers: { "Content-Type": o2 } })];
                case 1:
                  if (s2 = n2.sent(), a2 = s2.response, u2 = s2.error)
                    return [2, { error: u2 }];
                  c2 = a2.upload_id, p2 = a2.name, d2 = 1, f2 = 0, n2.label = 2;
                case 2:
                  return f2 < r2 ? (h2 = f2, v2 = Math.min(f2 + i2, r2), y2 = t2.slice(h2, v2), [4, this.requests.post(l.UPLOAD_FILE_CHUNK.replace(":uid", c2).replace(":name", e3).replace(":part", d2.toString()), { payload: y2, headers: { "Content-Type": o2 } })]) : [3, 5];
                case 3:
                  if (m2 = n2.sent().error)
                    return [2, { error: m2 }];
                  d2 += 1, n2.label = 4;
                case 4:
                  return f2 += i2, [3, 2];
                case 5:
                  return [4, this.requests.patch(l.COMPLETE_FILE_UPLOAD.replace(":uid", c2).replace(":name", e3))];
                case 6:
                  return (w2 = n2.sent().error) ? [2, { error: w2 }] : [2, { response: p2 }];
              }
            });
          });
        }, e2;
      }(), g = function() {
        function e2(e3, t2, r2) {
          this.key = e3, this.type = t2, this.projectId = r2;
        }
        return e2.prototype.Base = function(e3, t2) {
          var r2 = null == e3 ? void 0 : e3.trim();
          if (!r2)
            throw new Error("Base name is not defined");
          return new b(this.key, this.type, this.projectId, r2, t2);
        }, e2.prototype.Drive = function(e3, t2) {
          var r2 = null == e3 ? void 0 : e3.trim();
          if (!r2)
            throw new Error("Drive name is not defined");
          return new I(this.key, this.type, this.projectId, r2, t2);
        }, e2;
      }();
      function _(e2, t2) {
        var r2 = null == t2 ? void 0 : t2.trim(), n2 = null == e2 ? void 0 : e2.trim();
        if (r2 && n2)
          return new g(r2, i.AuthToken, n2);
        var o2 = n2 || (null === "" ? void 0 : "".trim());
        if (!o2)
          throw new Error("Project key is not defined");
        return new g(o2, i.ProjectKey, o2.split("_")[0]);
      }
      e.Base = function(e2, t2) {
        return _().Base(e2, t2);
      }, e.Deta = _, e.Drive = function(e2, t2) {
        return _().Drive(e2, t2);
      }, Object.defineProperty(e, "__esModule", { value: true });
    });
  }
});
export default require_index_browser();
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
/**
 * @license
 * author: Deta
 * deta@1.2.0
 * Released under the MIT license.
 */
//# sourceMappingURL=Deta.js.map
