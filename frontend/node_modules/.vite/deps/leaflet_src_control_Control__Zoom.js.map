{
  "version": 3,
  "sources": ["../../../../node_modules/leaflet/src/core/Class.js", "../../../../node_modules/leaflet/src/core/Events.js", "../../../../node_modules/leaflet/src/geometry/Bounds.js", "../../../../node_modules/leaflet/src/geo/LatLngBounds.js", "../../../../node_modules/leaflet/src/geo/LatLng.js", "../../../../node_modules/leaflet/src/geo/crs/CRS.js", "../../../../node_modules/leaflet/src/geo/crs/CRS.Earth.js", "../../../../node_modules/leaflet/src/geo/projection/Projection.SphericalMercator.js", "../../../../node_modules/leaflet/src/geometry/Transformation.js", "../../../../node_modules/leaflet/src/geo/crs/CRS.EPSG3857.js", "../../../../node_modules/leaflet/src/dom/PosAnimation.js", "../../../../node_modules/leaflet/src/map/Map.js", "../../../../node_modules/leaflet/src/control/Control.js", "../../../../node_modules/leaflet/src/control/Control.Zoom.js"],
  "sourcesContent": ["import * as Util from './Util';\r\n\r\n// @class Class\r\n// @aka L.Class\r\n\r\n// @section\r\n// @uninheritable\r\n\r\n// Thanks to John Resig and Dean Edwards for inspiration!\r\n\r\nexport function Class() {}\r\n\r\nClass.extend = function (props) {\r\n\r\n\t// @function extend(props: Object): Function\r\n\t// [Extends the current class](#class-inheritance) given the properties to be included.\r\n\t// Returns a Javascript function that is a class constructor (to be called with `new`).\r\n\tvar NewClass = function () {\r\n\r\n\t\tUtil.setOptions(this);\r\n\r\n\t\t// call the constructor\r\n\t\tif (this.initialize) {\r\n\t\t\tthis.initialize.apply(this, arguments);\r\n\t\t}\r\n\r\n\t\t// call all constructor hooks\r\n\t\tthis.callInitHooks();\r\n\t};\r\n\r\n\tvar parentProto = NewClass.__super__ = this.prototype;\r\n\r\n\tvar proto = Util.create(parentProto);\r\n\tproto.constructor = NewClass;\r\n\r\n\tNewClass.prototype = proto;\r\n\r\n\t// inherit parent's statics\r\n\tfor (var i in this) {\r\n\t\tif (Object.prototype.hasOwnProperty.call(this, i) && i !== 'prototype' && i !== '__super__') {\r\n\t\t\tNewClass[i] = this[i];\r\n\t\t}\r\n\t}\r\n\r\n\t// mix static properties into the class\r\n\tif (props.statics) {\r\n\t\tUtil.extend(NewClass, props.statics);\r\n\t}\r\n\r\n\t// mix includes into the prototype\r\n\tif (props.includes) {\r\n\t\tcheckDeprecatedMixinEvents(props.includes);\r\n\t\tUtil.extend.apply(null, [proto].concat(props.includes));\r\n\t}\r\n\r\n\t// mix given properties into the prototype\r\n\tUtil.extend(proto, props);\r\n\tdelete proto.statics;\r\n\tdelete proto.includes;\r\n\r\n\t// merge options\r\n\tif (proto.options) {\r\n\t\tproto.options = parentProto.options ? Util.create(parentProto.options) : {};\r\n\t\tUtil.extend(proto.options, props.options);\r\n\t}\r\n\r\n\tproto._initHooks = [];\r\n\r\n\t// add method for calling all hooks\r\n\tproto.callInitHooks = function () {\r\n\r\n\t\tif (this._initHooksCalled) { return; }\r\n\r\n\t\tif (parentProto.callInitHooks) {\r\n\t\t\tparentProto.callInitHooks.call(this);\r\n\t\t}\r\n\r\n\t\tthis._initHooksCalled = true;\r\n\r\n\t\tfor (var i = 0, len = proto._initHooks.length; i < len; i++) {\r\n\t\t\tproto._initHooks[i].call(this);\r\n\t\t}\r\n\t};\r\n\r\n\treturn NewClass;\r\n};\r\n\r\n\r\n// @function include(properties: Object): this\r\n// [Includes a mixin](#class-includes) into the current class.\r\nClass.include = function (props) {\r\n\tvar parentOptions = this.prototype.options;\r\n\tUtil.extend(this.prototype, props);\r\n\tif (props.options) {\r\n\t\tthis.prototype.options = parentOptions;\r\n\t\tthis.mergeOptions(props.options);\r\n\t}\r\n\treturn this;\r\n};\r\n\r\n// @function mergeOptions(options: Object): this\r\n// [Merges `options`](#class-options) into the defaults of the class.\r\nClass.mergeOptions = function (options) {\r\n\tUtil.extend(this.prototype.options, options);\r\n\treturn this;\r\n};\r\n\r\n// @function addInitHook(fn: Function): this\r\n// Adds a [constructor hook](#class-constructor-hooks) to the class.\r\nClass.addInitHook = function (fn) { // (Function) || (String, args...)\r\n\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\r\n\tvar init = typeof fn === 'function' ? fn : function () {\r\n\t\tthis[fn].apply(this, args);\r\n\t};\r\n\r\n\tthis.prototype._initHooks = this.prototype._initHooks || [];\r\n\tthis.prototype._initHooks.push(init);\r\n\treturn this;\r\n};\r\n\r\nfunction checkDeprecatedMixinEvents(includes) {\r\n\t/* global L: true */\r\n\tif (typeof L === 'undefined' || !L || !L.Mixin) { return; }\r\n\r\n\tincludes = Util.isArray(includes) ? includes : [includes];\r\n\r\n\tfor (var i = 0; i < includes.length; i++) {\r\n\t\tif (includes[i] === L.Mixin.Events) {\r\n\t\t\tconsole.warn('Deprecated include of L.Mixin.Events: ' +\r\n\t\t\t\t'this property will be removed in future releases, ' +\r\n\t\t\t\t'please inherit from L.Evented instead.', new Error().stack);\r\n\t\t}\r\n\t}\r\n}\r\n", "import {Class} from './Class';\r\nimport * as Util from './Util';\r\n\r\n/*\r\n * @class Evented\r\n * @aka L.Evented\r\n * @inherits Class\r\n *\r\n * A set of methods shared between event-powered classes (like `Map` and `Marker`). Generally, events allow you to execute some function when something happens with an object (e.g. the user clicks on the map, causing the map to fire `'click'` event).\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * map.on('click', function(e) {\r\n * \talert(e.latlng);\r\n * } );\r\n * ```\r\n *\r\n * Leaflet deals with event listeners by reference, so if you want to add a listener and then remove it, define it as a function:\r\n *\r\n * ```js\r\n * function onClick(e) { ... }\r\n *\r\n * map.on('click', onClick);\r\n * map.off('click', onClick);\r\n * ```\r\n */\r\n\r\nexport var Events = {\r\n\t/* @method on(type: String, fn: Function, context?: Object): this\r\n\t * Adds a listener function (`fn`) to a particular event type of the object. You can optionally specify the context of the listener (object the this keyword will point to). You can also pass several space-separated types (e.g. `'click dblclick'`).\r\n\t *\r\n\t * @alternative\r\n\t * @method on(eventMap: Object): this\r\n\t * Adds a set of type/listener pairs, e.g. `{click: onClick, mousemove: onMouseMove}`\r\n\t */\r\n\ton: function (types, fn, context) {\r\n\r\n\t\t// types can be a map of types/handlers\r\n\t\tif (typeof types === 'object') {\r\n\t\t\tfor (var type in types) {\r\n\t\t\t\t// we don't process space-separated events here for performance;\r\n\t\t\t\t// it's a hot path since Layer uses the on(obj) syntax\r\n\t\t\t\tthis._on(type, types[type], fn);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// types can be a string of space-separated words\r\n\t\t\ttypes = Util.splitWords(types);\r\n\r\n\t\t\tfor (var i = 0, len = types.length; i < len; i++) {\r\n\t\t\t\tthis._on(types[i], fn, context);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/* @method off(type: String, fn?: Function, context?: Object): this\r\n\t * Removes a previously added listener function. If no function is specified, it will remove all the listeners of that particular event from the object. Note that if you passed a custom context to `on`, you must pass the same context to `off` in order to remove the listener.\r\n\t *\r\n\t * @alternative\r\n\t * @method off(eventMap: Object): this\r\n\t * Removes a set of type/listener pairs.\r\n\t *\r\n\t * @alternative\r\n\t * @method off: this\r\n\t * Removes all listeners to all events on the object. This includes implicitly attached events.\r\n\t */\r\n\toff: function (types, fn, context) {\r\n\r\n\t\tif (!arguments.length) {\r\n\t\t\t// clear all listeners if called without arguments\r\n\t\t\tdelete this._events;\r\n\r\n\t\t} else if (typeof types === 'object') {\r\n\t\t\tfor (var type in types) {\r\n\t\t\t\tthis._off(type, types[type], fn);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\ttypes = Util.splitWords(types);\r\n\r\n\t\t\tvar removeAll = arguments.length === 1;\r\n\t\t\tfor (var i = 0, len = types.length; i < len; i++) {\r\n\t\t\t\tif (removeAll) {\r\n\t\t\t\t\tthis._off(types[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._off(types[i], fn, context);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// attach listener (without syntactic sugar now)\r\n\t_on: function (type, fn, context, _once) {\r\n\t\tif (typeof fn !== 'function') {\r\n\t\t\tconsole.warn('wrong listener type: ' + typeof fn);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// check if fn already there\r\n\t\tif (this._listens(type, fn, context) !== false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (context === this) {\r\n\t\t\t// Less memory footprint.\r\n\t\t\tcontext = undefined;\r\n\t\t}\r\n\r\n\t\tvar newListener = {fn: fn, ctx: context};\r\n\t\tif (_once) {\r\n\t\t\tnewListener.once = true;\r\n\t\t}\r\n\r\n\t\tthis._events = this._events || {};\r\n\t\tthis._events[type] = this._events[type] || [];\r\n\t\tthis._events[type].push(newListener);\r\n\t},\r\n\r\n\t_off: function (type, fn, context) {\r\n\t\tvar listeners,\r\n\t\t    i,\r\n\t\t    len;\r\n\r\n\t\tif (!this._events) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlisteners = this._events[type];\r\n\t\tif (!listeners) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (arguments.length === 1) { // remove all\r\n\t\t\tif (this._firingCount) {\r\n\t\t\t\t// Set all removed listeners to noop\r\n\t\t\t\t// so they are not called if remove happens in fire\r\n\t\t\t\tfor (i = 0, len = listeners.length; i < len; i++) {\r\n\t\t\t\t\tlisteners[i].fn = Util.falseFn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// clear all listeners for a type if function isn't specified\r\n\t\t\tdelete this._events[type];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof fn !== 'function') {\r\n\t\t\tconsole.warn('wrong listener type: ' + typeof fn);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// find fn and remove it\r\n\t\tvar index = this._listens(type, fn, context);\r\n\t\tif (index !== false) {\r\n\t\t\tvar listener = listeners[index];\r\n\t\t\tif (this._firingCount) {\r\n\t\t\t\t// set the removed listener to noop so that's not called if remove happens in fire\r\n\t\t\t\tlistener.fn = Util.falseFn;\r\n\r\n\t\t\t\t/* copy array in case events are being fired */\r\n\t\t\t\tthis._events[type] = listeners = listeners.slice();\r\n\t\t\t}\r\n\t\t\tlisteners.splice(index, 1);\r\n\t\t}\r\n\t},\r\n\r\n\t// @method fire(type: String, data?: Object, propagate?: Boolean): this\r\n\t// Fires an event of the specified type. You can optionally provide a data\r\n\t// object \u2014 the first argument of the listener function will contain its\r\n\t// properties. The event can optionally be propagated to event parents.\r\n\tfire: function (type, data, propagate) {\r\n\t\tif (!this.listens(type, propagate)) { return this; }\r\n\r\n\t\tvar event = Util.extend({}, data, {\r\n\t\t\ttype: type,\r\n\t\t\ttarget: this,\r\n\t\t\tsourceTarget: data && data.sourceTarget || this\r\n\t\t});\r\n\r\n\t\tif (this._events) {\r\n\t\t\tvar listeners = this._events[type];\r\n\t\t\tif (listeners) {\r\n\t\t\t\tthis._firingCount = (this._firingCount + 1) || 1;\r\n\t\t\t\tfor (var i = 0, len = listeners.length; i < len; i++) {\r\n\t\t\t\t\tvar l = listeners[i];\r\n\t\t\t\t\t// off overwrites l.fn, so we need to copy fn to a var\r\n\t\t\t\t\tvar fn = l.fn;\r\n\t\t\t\t\tif (l.once) {\r\n\t\t\t\t\t\tthis.off(type, fn, l.ctx);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfn.call(l.ctx || this, event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._firingCount--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (propagate) {\r\n\t\t\t// propagate the event to parents (set with addEventParent)\r\n\t\t\tthis._propagateEvent(event);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method listens(type: String, propagate?: Boolean): Boolean\r\n\t// @method listens(type: String, fn: Function, context?: Object, propagate?: Boolean): Boolean\r\n\t// Returns `true` if a particular event type has any listeners attached to it.\r\n\t// The verification can optionally be propagated, it will return `true` if parents have the listener attached to it.\r\n\tlistens: function (type, fn, context, propagate) {\r\n\t\tif (typeof type !== 'string') {\r\n\t\t\tconsole.warn('\"string\" type argument expected');\r\n\t\t}\r\n\r\n\t\t// we don't overwrite the input `fn` value, because we need to use it for propagation\r\n\t\tvar _fn = fn;\r\n\t\tif (typeof fn !== 'function') {\r\n\t\t\tpropagate = !!fn;\r\n\t\t\t_fn = undefined;\r\n\t\t\tcontext = undefined;\r\n\t\t}\r\n\r\n\t\tvar listeners = this._events && this._events[type];\r\n\t\tif (listeners && listeners.length) {\r\n\t\t\tif (this._listens(type, _fn, context) !== false) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (propagate) {\r\n\t\t\t// also check parents for listeners if event propagates\r\n\t\t\tfor (var id in this._eventParents) {\r\n\t\t\t\tif (this._eventParents[id].listens(type, fn, context, propagate)) { return true; }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\t// returns the index (number) or false\r\n\t_listens: function (type, fn, context) {\r\n\t\tif (!this._events) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tvar listeners = this._events[type] || [];\r\n\t\tif (!fn) {\r\n\t\t\treturn !!listeners.length;\r\n\t\t}\r\n\r\n\t\tif (context === this) {\r\n\t\t\t// Less memory footprint.\r\n\t\t\tcontext = undefined;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0, len = listeners.length; i < len; i++) {\r\n\t\t\tif (listeners[i].fn === fn && listeners[i].ctx === context) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\t// @method once(\u2026): this\r\n\t// Behaves as [`on(\u2026)`](#evented-on), except the listener will only get fired once and then removed.\r\n\tonce: function (types, fn, context) {\r\n\r\n\t\t// types can be a map of types/handlers\r\n\t\tif (typeof types === 'object') {\r\n\t\t\tfor (var type in types) {\r\n\t\t\t\t// we don't process space-separated events here for performance;\r\n\t\t\t\t// it's a hot path since Layer uses the on(obj) syntax\r\n\t\t\t\tthis._on(type, types[type], fn, true);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// types can be a string of space-separated words\r\n\t\t\ttypes = Util.splitWords(types);\r\n\r\n\t\t\tfor (var i = 0, len = types.length; i < len; i++) {\r\n\t\t\t\tthis._on(types[i], fn, context, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method addEventParent(obj: Evented): this\r\n\t// Adds an event parent - an `Evented` that will receive propagated events\r\n\taddEventParent: function (obj) {\r\n\t\tthis._eventParents = this._eventParents || {};\r\n\t\tthis._eventParents[Util.stamp(obj)] = obj;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method removeEventParent(obj: Evented): this\r\n\t// Removes an event parent, so it will stop receiving propagated events\r\n\tremoveEventParent: function (obj) {\r\n\t\tif (this._eventParents) {\r\n\t\t\tdelete this._eventParents[Util.stamp(obj)];\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_propagateEvent: function (e) {\r\n\t\tfor (var id in this._eventParents) {\r\n\t\t\tthis._eventParents[id].fire(e.type, Util.extend({\r\n\t\t\t\tlayer: e.target,\r\n\t\t\t\tpropagatedFrom: e.target\r\n\t\t\t}, e), true);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// aliases; we should ditch those eventually\r\n\r\n// @method addEventListener(\u2026): this\r\n// Alias to [`on(\u2026)`](#evented-on)\r\nEvents.addEventListener = Events.on;\r\n\r\n// @method removeEventListener(\u2026): this\r\n// Alias to [`off(\u2026)`](#evented-off)\r\n\r\n// @method clearAllEventListeners(\u2026): this\r\n// Alias to [`off()`](#evented-off)\r\nEvents.removeEventListener = Events.clearAllEventListeners = Events.off;\r\n\r\n// @method addOneTimeEventListener(\u2026): this\r\n// Alias to [`once(\u2026)`](#evented-once)\r\nEvents.addOneTimeEventListener = Events.once;\r\n\r\n// @method fireEvent(\u2026): this\r\n// Alias to [`fire(\u2026)`](#evented-fire)\r\nEvents.fireEvent = Events.fire;\r\n\r\n// @method hasEventListeners(\u2026): Boolean\r\n// Alias to [`listens(\u2026)`](#evented-listens)\r\nEvents.hasEventListeners = Events.listens;\r\n\r\nexport var Evented = Class.extend(Events);\r\n", "import {Point, toPoint} from './Point';\r\n\r\n/*\r\n * @class Bounds\r\n * @aka L.Bounds\r\n *\r\n * Represents a rectangular area in pixel coordinates.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * var p1 = L.point(10, 10),\r\n * p2 = L.point(40, 60),\r\n * bounds = L.bounds(p1, p2);\r\n * ```\r\n *\r\n * All Leaflet methods that accept `Bounds` objects also accept them in a simple Array form (unless noted otherwise), so the bounds example above can be passed like this:\r\n *\r\n * ```js\r\n * otherBounds.intersects([[10, 10], [40, 60]]);\r\n * ```\r\n *\r\n * Note that `Bounds` does not inherit from Leaflet's `Class` object,\r\n * which means new classes can't inherit from it, and new methods\r\n * can't be added to it with the `include` function.\r\n */\r\n\r\nexport function Bounds(a, b) {\r\n\tif (!a) { return; }\r\n\r\n\tvar points = b ? [a, b] : a;\r\n\r\n\tfor (var i = 0, len = points.length; i < len; i++) {\r\n\t\tthis.extend(points[i]);\r\n\t}\r\n}\r\n\r\nBounds.prototype = {\r\n\t// @method extend(point: Point): this\r\n\t// Extends the bounds to contain the given point.\r\n\r\n\t// @alternative\r\n\t// @method extend(otherBounds: Bounds): this\r\n\t// Extend the bounds to contain the given bounds\r\n\textend: function (obj) {\r\n\t\tvar min2, max2;\r\n\t\tif (!obj) { return this; }\r\n\r\n\t\tif (obj instanceof Point || typeof obj[0] === 'number' || 'x' in obj) {\r\n\t\t\tmin2 = max2 = toPoint(obj);\r\n\t\t} else {\r\n\t\t\tobj = toBounds(obj);\r\n\t\t\tmin2 = obj.min;\r\n\t\t\tmax2 = obj.max;\r\n\r\n\t\t\tif (!min2 || !max2) { return this; }\r\n\t\t}\r\n\r\n\t\t// @property min: Point\r\n\t\t// The top left corner of the rectangle.\r\n\t\t// @property max: Point\r\n\t\t// The bottom right corner of the rectangle.\r\n\t\tif (!this.min && !this.max) {\r\n\t\t\tthis.min = min2.clone();\r\n\t\t\tthis.max = max2.clone();\r\n\t\t} else {\r\n\t\t\tthis.min.x = Math.min(min2.x, this.min.x);\r\n\t\t\tthis.max.x = Math.max(max2.x, this.max.x);\r\n\t\t\tthis.min.y = Math.min(min2.y, this.min.y);\r\n\t\t\tthis.max.y = Math.max(max2.y, this.max.y);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method getCenter(round?: Boolean): Point\r\n\t// Returns the center point of the bounds.\r\n\tgetCenter: function (round) {\r\n\t\treturn toPoint(\r\n\t\t        (this.min.x + this.max.x) / 2,\r\n\t\t        (this.min.y + this.max.y) / 2, round);\r\n\t},\r\n\r\n\t// @method getBottomLeft(): Point\r\n\t// Returns the bottom-left point of the bounds.\r\n\tgetBottomLeft: function () {\r\n\t\treturn toPoint(this.min.x, this.max.y);\r\n\t},\r\n\r\n\t// @method getTopRight(): Point\r\n\t// Returns the top-right point of the bounds.\r\n\tgetTopRight: function () { // -> Point\r\n\t\treturn toPoint(this.max.x, this.min.y);\r\n\t},\r\n\r\n\t// @method getTopLeft(): Point\r\n\t// Returns the top-left point of the bounds (i.e. [`this.min`](#bounds-min)).\r\n\tgetTopLeft: function () {\r\n\t\treturn this.min; // left, top\r\n\t},\r\n\r\n\t// @method getBottomRight(): Point\r\n\t// Returns the bottom-right point of the bounds (i.e. [`this.max`](#bounds-max)).\r\n\tgetBottomRight: function () {\r\n\t\treturn this.max; // right, bottom\r\n\t},\r\n\r\n\t// @method getSize(): Point\r\n\t// Returns the size of the given bounds\r\n\tgetSize: function () {\r\n\t\treturn this.max.subtract(this.min);\r\n\t},\r\n\r\n\t// @method contains(otherBounds: Bounds): Boolean\r\n\t// Returns `true` if the rectangle contains the given one.\r\n\t// @alternative\r\n\t// @method contains(point: Point): Boolean\r\n\t// Returns `true` if the rectangle contains the given point.\r\n\tcontains: function (obj) {\r\n\t\tvar min, max;\r\n\r\n\t\tif (typeof obj[0] === 'number' || obj instanceof Point) {\r\n\t\t\tobj = toPoint(obj);\r\n\t\t} else {\r\n\t\t\tobj = toBounds(obj);\r\n\t\t}\r\n\r\n\t\tif (obj instanceof Bounds) {\r\n\t\t\tmin = obj.min;\r\n\t\t\tmax = obj.max;\r\n\t\t} else {\r\n\t\t\tmin = max = obj;\r\n\t\t}\r\n\r\n\t\treturn (min.x >= this.min.x) &&\r\n\t\t       (max.x <= this.max.x) &&\r\n\t\t       (min.y >= this.min.y) &&\r\n\t\t       (max.y <= this.max.y);\r\n\t},\r\n\r\n\t// @method intersects(otherBounds: Bounds): Boolean\r\n\t// Returns `true` if the rectangle intersects the given bounds. Two bounds\r\n\t// intersect if they have at least one point in common.\r\n\tintersects: function (bounds) { // (Bounds) -> Boolean\r\n\t\tbounds = toBounds(bounds);\r\n\r\n\t\tvar min = this.min,\r\n\t\t    max = this.max,\r\n\t\t    min2 = bounds.min,\r\n\t\t    max2 = bounds.max,\r\n\t\t    xIntersects = (max2.x >= min.x) && (min2.x <= max.x),\r\n\t\t    yIntersects = (max2.y >= min.y) && (min2.y <= max.y);\r\n\r\n\t\treturn xIntersects && yIntersects;\r\n\t},\r\n\r\n\t// @method overlaps(otherBounds: Bounds): Boolean\r\n\t// Returns `true` if the rectangle overlaps the given bounds. Two bounds\r\n\t// overlap if their intersection is an area.\r\n\toverlaps: function (bounds) { // (Bounds) -> Boolean\r\n\t\tbounds = toBounds(bounds);\r\n\r\n\t\tvar min = this.min,\r\n\t\t    max = this.max,\r\n\t\t    min2 = bounds.min,\r\n\t\t    max2 = bounds.max,\r\n\t\t    xOverlaps = (max2.x > min.x) && (min2.x < max.x),\r\n\t\t    yOverlaps = (max2.y > min.y) && (min2.y < max.y);\r\n\r\n\t\treturn xOverlaps && yOverlaps;\r\n\t},\r\n\r\n\t// @method isValid(): Boolean\r\n\t// Returns `true` if the bounds are properly initialized.\r\n\tisValid: function () {\r\n\t\treturn !!(this.min && this.max);\r\n\t},\r\n\r\n\r\n\t// @method pad(bufferRatio: Number): Bounds\r\n\t// Returns bounds created by extending or retracting the current bounds by a given ratio in each direction.\r\n\t// For example, a ratio of 0.5 extends the bounds by 50% in each direction.\r\n\t// Negative values will retract the bounds.\r\n\tpad: function (bufferRatio) {\r\n\t\tvar min = this.min,\r\n\t\tmax = this.max,\r\n\t\theightBuffer = Math.abs(min.x - max.x) * bufferRatio,\r\n\t\twidthBuffer = Math.abs(min.y - max.y) * bufferRatio;\r\n\r\n\r\n\t\treturn toBounds(\r\n\t\t\ttoPoint(min.x - heightBuffer, min.y - widthBuffer),\r\n\t\t\ttoPoint(max.x + heightBuffer, max.y + widthBuffer));\r\n\t},\r\n\r\n\r\n\t// @method equals(otherBounds: Bounds): Boolean\r\n\t// Returns `true` if the rectangle is equivalent to the given bounds.\r\n\tequals: function (bounds) {\r\n\t\tif (!bounds) { return false; }\r\n\r\n\t\tbounds = toBounds(bounds);\r\n\r\n\t\treturn this.min.equals(bounds.getTopLeft()) &&\r\n\t\t\tthis.max.equals(bounds.getBottomRight());\r\n\t},\r\n};\r\n\r\n\r\n// @factory L.bounds(corner1: Point, corner2: Point)\r\n// Creates a Bounds object from two corners coordinate pairs.\r\n// @alternative\r\n// @factory L.bounds(points: Point[])\r\n// Creates a Bounds object from the given array of points.\r\nexport function toBounds(a, b) {\r\n\tif (!a || a instanceof Bounds) {\r\n\t\treturn a;\r\n\t}\r\n\treturn new Bounds(a, b);\r\n}\r\n", "import {LatLng, toLatLng} from './LatLng';\r\n\r\n/*\r\n * @class LatLngBounds\r\n * @aka L.LatLngBounds\r\n *\r\n * Represents a rectangular geographical area on a map.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * var corner1 = L.latLng(40.712, -74.227),\r\n * corner2 = L.latLng(40.774, -74.125),\r\n * bounds = L.latLngBounds(corner1, corner2);\r\n * ```\r\n *\r\n * All Leaflet methods that accept LatLngBounds objects also accept them in a simple Array form (unless noted otherwise), so the bounds example above can be passed like this:\r\n *\r\n * ```js\r\n * map.fitBounds([\r\n * \t[40.712, -74.227],\r\n * \t[40.774, -74.125]\r\n * ]);\r\n * ```\r\n *\r\n * Caution: if the area crosses the antimeridian (often confused with the International Date Line), you must specify corners _outside_ the [-180, 180] degrees longitude range.\r\n *\r\n * Note that `LatLngBounds` does not inherit from Leaflet's `Class` object,\r\n * which means new classes can't inherit from it, and new methods\r\n * can't be added to it with the `include` function.\r\n */\r\n\r\nexport function LatLngBounds(corner1, corner2) { // (LatLng, LatLng) or (LatLng[])\r\n\tif (!corner1) { return; }\r\n\r\n\tvar latlngs = corner2 ? [corner1, corner2] : corner1;\r\n\r\n\tfor (var i = 0, len = latlngs.length; i < len; i++) {\r\n\t\tthis.extend(latlngs[i]);\r\n\t}\r\n}\r\n\r\nLatLngBounds.prototype = {\r\n\r\n\t// @method extend(latlng: LatLng): this\r\n\t// Extend the bounds to contain the given point\r\n\r\n\t// @alternative\r\n\t// @method extend(otherBounds: LatLngBounds): this\r\n\t// Extend the bounds to contain the given bounds\r\n\textend: function (obj) {\r\n\t\tvar sw = this._southWest,\r\n\t\t    ne = this._northEast,\r\n\t\t    sw2, ne2;\r\n\r\n\t\tif (obj instanceof LatLng) {\r\n\t\t\tsw2 = obj;\r\n\t\t\tne2 = obj;\r\n\r\n\t\t} else if (obj instanceof LatLngBounds) {\r\n\t\t\tsw2 = obj._southWest;\r\n\t\t\tne2 = obj._northEast;\r\n\r\n\t\t\tif (!sw2 || !ne2) { return this; }\r\n\r\n\t\t} else {\r\n\t\t\treturn obj ? this.extend(toLatLng(obj) || toLatLngBounds(obj)) : this;\r\n\t\t}\r\n\r\n\t\tif (!sw && !ne) {\r\n\t\t\tthis._southWest = new LatLng(sw2.lat, sw2.lng);\r\n\t\t\tthis._northEast = new LatLng(ne2.lat, ne2.lng);\r\n\t\t} else {\r\n\t\t\tsw.lat = Math.min(sw2.lat, sw.lat);\r\n\t\t\tsw.lng = Math.min(sw2.lng, sw.lng);\r\n\t\t\tne.lat = Math.max(ne2.lat, ne.lat);\r\n\t\t\tne.lng = Math.max(ne2.lng, ne.lng);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method pad(bufferRatio: Number): LatLngBounds\r\n\t// Returns bounds created by extending or retracting the current bounds by a given ratio in each direction.\r\n\t// For example, a ratio of 0.5 extends the bounds by 50% in each direction.\r\n\t// Negative values will retract the bounds.\r\n\tpad: function (bufferRatio) {\r\n\t\tvar sw = this._southWest,\r\n\t\t    ne = this._northEast,\r\n\t\t    heightBuffer = Math.abs(sw.lat - ne.lat) * bufferRatio,\r\n\t\t    widthBuffer = Math.abs(sw.lng - ne.lng) * bufferRatio;\r\n\r\n\t\treturn new LatLngBounds(\r\n\t\t        new LatLng(sw.lat - heightBuffer, sw.lng - widthBuffer),\r\n\t\t        new LatLng(ne.lat + heightBuffer, ne.lng + widthBuffer));\r\n\t},\r\n\r\n\t// @method getCenter(): LatLng\r\n\t// Returns the center point of the bounds.\r\n\tgetCenter: function () {\r\n\t\treturn new LatLng(\r\n\t\t        (this._southWest.lat + this._northEast.lat) / 2,\r\n\t\t        (this._southWest.lng + this._northEast.lng) / 2);\r\n\t},\r\n\r\n\t// @method getSouthWest(): LatLng\r\n\t// Returns the south-west point of the bounds.\r\n\tgetSouthWest: function () {\r\n\t\treturn this._southWest;\r\n\t},\r\n\r\n\t// @method getNorthEast(): LatLng\r\n\t// Returns the north-east point of the bounds.\r\n\tgetNorthEast: function () {\r\n\t\treturn this._northEast;\r\n\t},\r\n\r\n\t// @method getNorthWest(): LatLng\r\n\t// Returns the north-west point of the bounds.\r\n\tgetNorthWest: function () {\r\n\t\treturn new LatLng(this.getNorth(), this.getWest());\r\n\t},\r\n\r\n\t// @method getSouthEast(): LatLng\r\n\t// Returns the south-east point of the bounds.\r\n\tgetSouthEast: function () {\r\n\t\treturn new LatLng(this.getSouth(), this.getEast());\r\n\t},\r\n\r\n\t// @method getWest(): Number\r\n\t// Returns the west longitude of the bounds\r\n\tgetWest: function () {\r\n\t\treturn this._southWest.lng;\r\n\t},\r\n\r\n\t// @method getSouth(): Number\r\n\t// Returns the south latitude of the bounds\r\n\tgetSouth: function () {\r\n\t\treturn this._southWest.lat;\r\n\t},\r\n\r\n\t// @method getEast(): Number\r\n\t// Returns the east longitude of the bounds\r\n\tgetEast: function () {\r\n\t\treturn this._northEast.lng;\r\n\t},\r\n\r\n\t// @method getNorth(): Number\r\n\t// Returns the north latitude of the bounds\r\n\tgetNorth: function () {\r\n\t\treturn this._northEast.lat;\r\n\t},\r\n\r\n\t// @method contains(otherBounds: LatLngBounds): Boolean\r\n\t// Returns `true` if the rectangle contains the given one.\r\n\r\n\t// @alternative\r\n\t// @method contains (latlng: LatLng): Boolean\r\n\t// Returns `true` if the rectangle contains the given point.\r\n\tcontains: function (obj) { // (LatLngBounds) or (LatLng) -> Boolean\r\n\t\tif (typeof obj[0] === 'number' || obj instanceof LatLng || 'lat' in obj) {\r\n\t\t\tobj = toLatLng(obj);\r\n\t\t} else {\r\n\t\t\tobj = toLatLngBounds(obj);\r\n\t\t}\r\n\r\n\t\tvar sw = this._southWest,\r\n\t\t    ne = this._northEast,\r\n\t\t    sw2, ne2;\r\n\r\n\t\tif (obj instanceof LatLngBounds) {\r\n\t\t\tsw2 = obj.getSouthWest();\r\n\t\t\tne2 = obj.getNorthEast();\r\n\t\t} else {\r\n\t\t\tsw2 = ne2 = obj;\r\n\t\t}\r\n\r\n\t\treturn (sw2.lat >= sw.lat) && (ne2.lat <= ne.lat) &&\r\n\t\t       (sw2.lng >= sw.lng) && (ne2.lng <= ne.lng);\r\n\t},\r\n\r\n\t// @method intersects(otherBounds: LatLngBounds): Boolean\r\n\t// Returns `true` if the rectangle intersects the given bounds. Two bounds intersect if they have at least one point in common.\r\n\tintersects: function (bounds) {\r\n\t\tbounds = toLatLngBounds(bounds);\r\n\r\n\t\tvar sw = this._southWest,\r\n\t\t    ne = this._northEast,\r\n\t\t    sw2 = bounds.getSouthWest(),\r\n\t\t    ne2 = bounds.getNorthEast(),\r\n\r\n\t\t    latIntersects = (ne2.lat >= sw.lat) && (sw2.lat <= ne.lat),\r\n\t\t    lngIntersects = (ne2.lng >= sw.lng) && (sw2.lng <= ne.lng);\r\n\r\n\t\treturn latIntersects && lngIntersects;\r\n\t},\r\n\r\n\t// @method overlaps(otherBounds: LatLngBounds): Boolean\r\n\t// Returns `true` if the rectangle overlaps the given bounds. Two bounds overlap if their intersection is an area.\r\n\toverlaps: function (bounds) {\r\n\t\tbounds = toLatLngBounds(bounds);\r\n\r\n\t\tvar sw = this._southWest,\r\n\t\t    ne = this._northEast,\r\n\t\t    sw2 = bounds.getSouthWest(),\r\n\t\t    ne2 = bounds.getNorthEast(),\r\n\r\n\t\t    latOverlaps = (ne2.lat > sw.lat) && (sw2.lat < ne.lat),\r\n\t\t    lngOverlaps = (ne2.lng > sw.lng) && (sw2.lng < ne.lng);\r\n\r\n\t\treturn latOverlaps && lngOverlaps;\r\n\t},\r\n\r\n\t// @method toBBoxString(): String\r\n\t// Returns a string with bounding box coordinates in a 'southwest_lng,southwest_lat,northeast_lng,northeast_lat' format. Useful for sending requests to web services that return geo data.\r\n\ttoBBoxString: function () {\r\n\t\treturn [this.getWest(), this.getSouth(), this.getEast(), this.getNorth()].join(',');\r\n\t},\r\n\r\n\t// @method equals(otherBounds: LatLngBounds, maxMargin?: Number): Boolean\r\n\t// Returns `true` if the rectangle is equivalent (within a small margin of error) to the given bounds. The margin of error can be overridden by setting `maxMargin` to a small number.\r\n\tequals: function (bounds, maxMargin) {\r\n\t\tif (!bounds) { return false; }\r\n\r\n\t\tbounds = toLatLngBounds(bounds);\r\n\r\n\t\treturn this._southWest.equals(bounds.getSouthWest(), maxMargin) &&\r\n\t\t       this._northEast.equals(bounds.getNorthEast(), maxMargin);\r\n\t},\r\n\r\n\t// @method isValid(): Boolean\r\n\t// Returns `true` if the bounds are properly initialized.\r\n\tisValid: function () {\r\n\t\treturn !!(this._southWest && this._northEast);\r\n\t}\r\n};\r\n\r\n// TODO International date line?\r\n\r\n// @factory L.latLngBounds(corner1: LatLng, corner2: LatLng)\r\n// Creates a `LatLngBounds` object by defining two diagonally opposite corners of the rectangle.\r\n\r\n// @alternative\r\n// @factory L.latLngBounds(latlngs: LatLng[])\r\n// Creates a `LatLngBounds` object defined by the geographical points it contains. Very useful for zooming the map to fit a particular set of locations with [`fitBounds`](#map-fitbounds).\r\nexport function toLatLngBounds(a, b) {\r\n\tif (a instanceof LatLngBounds) {\r\n\t\treturn a;\r\n\t}\r\n\treturn new LatLngBounds(a, b);\r\n}\r\n", "import * as Util from '../core/Util';\r\nimport {Earth} from './crs/CRS.Earth';\r\nimport {toLatLngBounds} from './LatLngBounds';\r\n\r\n/* @class LatLng\r\n * @aka L.LatLng\r\n *\r\n * Represents a geographical point with a certain latitude and longitude.\r\n *\r\n * @example\r\n *\r\n * ```\r\n * var latlng = L.latLng(50.5, 30.5);\r\n * ```\r\n *\r\n * All Leaflet methods that accept LatLng objects also accept them in a simple Array form and simple object form (unless noted otherwise), so these lines are equivalent:\r\n *\r\n * ```\r\n * map.panTo([50, 30]);\r\n * map.panTo({lon: 30, lat: 50});\r\n * map.panTo({lat: 50, lng: 30});\r\n * map.panTo(L.latLng(50, 30));\r\n * ```\r\n *\r\n * Note that `LatLng` does not inherit from Leaflet's `Class` object,\r\n * which means new classes can't inherit from it, and new methods\r\n * can't be added to it with the `include` function.\r\n */\r\n\r\nexport function LatLng(lat, lng, alt) {\r\n\tif (isNaN(lat) || isNaN(lng)) {\r\n\t\tthrow new Error('Invalid LatLng object: (' + lat + ', ' + lng + ')');\r\n\t}\r\n\r\n\t// @property lat: Number\r\n\t// Latitude in degrees\r\n\tthis.lat = +lat;\r\n\r\n\t// @property lng: Number\r\n\t// Longitude in degrees\r\n\tthis.lng = +lng;\r\n\r\n\t// @property alt: Number\r\n\t// Altitude in meters (optional)\r\n\tif (alt !== undefined) {\r\n\t\tthis.alt = +alt;\r\n\t}\r\n}\r\n\r\nLatLng.prototype = {\r\n\t// @method equals(otherLatLng: LatLng, maxMargin?: Number): Boolean\r\n\t// Returns `true` if the given `LatLng` point is at the same position (within a small margin of error). The margin of error can be overridden by setting `maxMargin` to a small number.\r\n\tequals: function (obj, maxMargin) {\r\n\t\tif (!obj) { return false; }\r\n\r\n\t\tobj = toLatLng(obj);\r\n\r\n\t\tvar margin = Math.max(\r\n\t\t        Math.abs(this.lat - obj.lat),\r\n\t\t        Math.abs(this.lng - obj.lng));\r\n\r\n\t\treturn margin <= (maxMargin === undefined ? 1.0E-9 : maxMargin);\r\n\t},\r\n\r\n\t// @method toString(): String\r\n\t// Returns a string representation of the point (for debugging purposes).\r\n\ttoString: function (precision) {\r\n\t\treturn 'LatLng(' +\r\n\t\t        Util.formatNum(this.lat, precision) + ', ' +\r\n\t\t        Util.formatNum(this.lng, precision) + ')';\r\n\t},\r\n\r\n\t// @method distanceTo(otherLatLng: LatLng): Number\r\n\t// Returns the distance (in meters) to the given `LatLng` calculated using the [Spherical Law of Cosines](https://en.wikipedia.org/wiki/Spherical_law_of_cosines).\r\n\tdistanceTo: function (other) {\r\n\t\treturn Earth.distance(this, toLatLng(other));\r\n\t},\r\n\r\n\t// @method wrap(): LatLng\r\n\t// Returns a new `LatLng` object with the longitude wrapped so it's always between -180 and +180 degrees.\r\n\twrap: function () {\r\n\t\treturn Earth.wrapLatLng(this);\r\n\t},\r\n\r\n\t// @method toBounds(sizeInMeters: Number): LatLngBounds\r\n\t// Returns a new `LatLngBounds` object in which each boundary is `sizeInMeters/2` meters apart from the `LatLng`.\r\n\ttoBounds: function (sizeInMeters) {\r\n\t\tvar latAccuracy = 180 * sizeInMeters / 40075017,\r\n\t\t    lngAccuracy = latAccuracy / Math.cos((Math.PI / 180) * this.lat);\r\n\r\n\t\treturn toLatLngBounds(\r\n\t\t        [this.lat - latAccuracy, this.lng - lngAccuracy],\r\n\t\t        [this.lat + latAccuracy, this.lng + lngAccuracy]);\r\n\t},\r\n\r\n\tclone: function () {\r\n\t\treturn new LatLng(this.lat, this.lng, this.alt);\r\n\t}\r\n};\r\n\r\n\r\n\r\n// @factory L.latLng(latitude: Number, longitude: Number, altitude?: Number): LatLng\r\n// Creates an object representing a geographical point with the given latitude and longitude (and optionally altitude).\r\n\r\n// @alternative\r\n// @factory L.latLng(coords: Array): LatLng\r\n// Expects an array of the form `[Number, Number]` or `[Number, Number, Number]` instead.\r\n\r\n// @alternative\r\n// @factory L.latLng(coords: Object): LatLng\r\n// Expects an plain object of the form `{lat: Number, lng: Number}` or `{lat: Number, lng: Number, alt: Number}` instead.\r\n\r\nexport function toLatLng(a, b, c) {\r\n\tif (a instanceof LatLng) {\r\n\t\treturn a;\r\n\t}\r\n\tif (Util.isArray(a) && typeof a[0] !== 'object') {\r\n\t\tif (a.length === 3) {\r\n\t\t\treturn new LatLng(a[0], a[1], a[2]);\r\n\t\t}\r\n\t\tif (a.length === 2) {\r\n\t\t\treturn new LatLng(a[0], a[1]);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tif (a === undefined || a === null) {\r\n\t\treturn a;\r\n\t}\r\n\tif (typeof a === 'object' && 'lat' in a) {\r\n\t\treturn new LatLng(a.lat, 'lng' in a ? a.lng : a.lon, a.alt);\r\n\t}\r\n\tif (b === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\treturn new LatLng(a, b, c);\r\n}\r\n", "\r\nimport {Bounds} from '../../geometry/Bounds';\r\nimport {LatLng} from '../LatLng';\r\nimport {LatLngBounds} from '../LatLngBounds';\r\nimport * as Util from '../../core/Util';\r\n\r\n/*\r\n * @namespace CRS\r\n * @crs L.CRS.Base\r\n * Object that defines coordinate reference systems for projecting\r\n * geographical points into pixel (screen) coordinates and back (and to\r\n * coordinates in other units for [WMS](https://en.wikipedia.org/wiki/Web_Map_Service) services). See\r\n * [spatial reference system](https://en.wikipedia.org/wiki/Spatial_reference_system).\r\n *\r\n * Leaflet defines the most usual CRSs by default. If you want to use a\r\n * CRS not defined by default, take a look at the\r\n * [Proj4Leaflet](https://github.com/kartena/Proj4Leaflet) plugin.\r\n *\r\n * Note that the CRS instances do not inherit from Leaflet's `Class` object,\r\n * and can't be instantiated. Also, new classes can't inherit from them,\r\n * and methods can't be added to them with the `include` function.\r\n */\r\n\r\nexport var CRS = {\r\n\t// @method latLngToPoint(latlng: LatLng, zoom: Number): Point\r\n\t// Projects geographical coordinates into pixel coordinates for a given zoom.\r\n\tlatLngToPoint: function (latlng, zoom) {\r\n\t\tvar projectedPoint = this.projection.project(latlng),\r\n\t\t    scale = this.scale(zoom);\r\n\r\n\t\treturn this.transformation._transform(projectedPoint, scale);\r\n\t},\r\n\r\n\t// @method pointToLatLng(point: Point, zoom: Number): LatLng\r\n\t// The inverse of `latLngToPoint`. Projects pixel coordinates on a given\r\n\t// zoom into geographical coordinates.\r\n\tpointToLatLng: function (point, zoom) {\r\n\t\tvar scale = this.scale(zoom),\r\n\t\t    untransformedPoint = this.transformation.untransform(point, scale);\r\n\r\n\t\treturn this.projection.unproject(untransformedPoint);\r\n\t},\r\n\r\n\t// @method project(latlng: LatLng): Point\r\n\t// Projects geographical coordinates into coordinates in units accepted for\r\n\t// this CRS (e.g. meters for EPSG:3857, for passing it to WMS services).\r\n\tproject: function (latlng) {\r\n\t\treturn this.projection.project(latlng);\r\n\t},\r\n\r\n\t// @method unproject(point: Point): LatLng\r\n\t// Given a projected coordinate returns the corresponding LatLng.\r\n\t// The inverse of `project`.\r\n\tunproject: function (point) {\r\n\t\treturn this.projection.unproject(point);\r\n\t},\r\n\r\n\t// @method scale(zoom: Number): Number\r\n\t// Returns the scale used when transforming projected coordinates into\r\n\t// pixel coordinates for a particular zoom. For example, it returns\r\n\t// `256 * 2^zoom` for Mercator-based CRS.\r\n\tscale: function (zoom) {\r\n\t\treturn 256 * Math.pow(2, zoom);\r\n\t},\r\n\r\n\t// @method zoom(scale: Number): Number\r\n\t// Inverse of `scale()`, returns the zoom level corresponding to a scale\r\n\t// factor of `scale`.\r\n\tzoom: function (scale) {\r\n\t\treturn Math.log(scale / 256) / Math.LN2;\r\n\t},\r\n\r\n\t// @method getProjectedBounds(zoom: Number): Bounds\r\n\t// Returns the projection's bounds scaled and transformed for the provided `zoom`.\r\n\tgetProjectedBounds: function (zoom) {\r\n\t\tif (this.infinite) { return null; }\r\n\r\n\t\tvar b = this.projection.bounds,\r\n\t\t    s = this.scale(zoom),\r\n\t\t    min = this.transformation.transform(b.min, s),\r\n\t\t    max = this.transformation.transform(b.max, s);\r\n\r\n\t\treturn new Bounds(min, max);\r\n\t},\r\n\r\n\t// @method distance(latlng1: LatLng, latlng2: LatLng): Number\r\n\t// Returns the distance between two geographical coordinates.\r\n\r\n\t// @property code: String\r\n\t// Standard code name of the CRS passed into WMS services (e.g. `'EPSG:3857'`)\r\n\t//\r\n\t// @property wrapLng: Number[]\r\n\t// An array of two numbers defining whether the longitude (horizontal) coordinate\r\n\t// axis wraps around a given range and how. Defaults to `[-180, 180]` in most\r\n\t// geographical CRSs. If `undefined`, the longitude axis does not wrap around.\r\n\t//\r\n\t// @property wrapLat: Number[]\r\n\t// Like `wrapLng`, but for the latitude (vertical) axis.\r\n\r\n\t// wrapLng: [min, max],\r\n\t// wrapLat: [min, max],\r\n\r\n\t// @property infinite: Boolean\r\n\t// If true, the coordinate space will be unbounded (infinite in both axes)\r\n\tinfinite: false,\r\n\r\n\t// @method wrapLatLng(latlng: LatLng): LatLng\r\n\t// Returns a `LatLng` where lat and lng has been wrapped according to the\r\n\t// CRS's `wrapLat` and `wrapLng` properties, if they are outside the CRS's bounds.\r\n\twrapLatLng: function (latlng) {\r\n\t\tvar lng = this.wrapLng ? Util.wrapNum(latlng.lng, this.wrapLng, true) : latlng.lng,\r\n\t\t    lat = this.wrapLat ? Util.wrapNum(latlng.lat, this.wrapLat, true) : latlng.lat,\r\n\t\t    alt = latlng.alt;\r\n\r\n\t\treturn new LatLng(lat, lng, alt);\r\n\t},\r\n\r\n\t// @method wrapLatLngBounds(bounds: LatLngBounds): LatLngBounds\r\n\t// Returns a `LatLngBounds` with the same size as the given one, ensuring\r\n\t// that its center is within the CRS's bounds.\r\n\t// Only accepts actual `L.LatLngBounds` instances, not arrays.\r\n\twrapLatLngBounds: function (bounds) {\r\n\t\tvar center = bounds.getCenter(),\r\n\t\t    newCenter = this.wrapLatLng(center),\r\n\t\t    latShift = center.lat - newCenter.lat,\r\n\t\t    lngShift = center.lng - newCenter.lng;\r\n\r\n\t\tif (latShift === 0 && lngShift === 0) {\r\n\t\t\treturn bounds;\r\n\t\t}\r\n\r\n\t\tvar sw = bounds.getSouthWest(),\r\n\t\t    ne = bounds.getNorthEast(),\r\n\t\t    newSw = new LatLng(sw.lat - latShift, sw.lng - lngShift),\r\n\t\t    newNe = new LatLng(ne.lat - latShift, ne.lng - lngShift);\r\n\r\n\t\treturn new LatLngBounds(newSw, newNe);\r\n\t}\r\n};\r\n", "import {CRS} from './CRS';\nimport * as Util from '../../core/Util';\n\n/*\n * @namespace CRS\n * @crs L.CRS.Earth\n *\n * Serves as the base for CRS that are global such that they cover the earth.\n * Can only be used as the base for other CRS and cannot be used directly,\n * since it does not have a `code`, `projection` or `transformation`. `distance()` returns\n * meters.\n */\n\nexport var Earth = Util.extend({}, CRS, {\n\twrapLng: [-180, 180],\n\n\t// Mean Earth Radius, as recommended for use by\n\t// the International Union of Geodesy and Geophysics,\n\t// see https://rosettacode.org/wiki/Haversine_formula\n\tR: 6371000,\n\n\t// distance between two geographical points using spherical law of cosines approximation\n\tdistance: function (latlng1, latlng2) {\n\t\tvar rad = Math.PI / 180,\n\t\t    lat1 = latlng1.lat * rad,\n\t\t    lat2 = latlng2.lat * rad,\n\t\t    sinDLat = Math.sin((latlng2.lat - latlng1.lat) * rad / 2),\n\t\t    sinDLon = Math.sin((latlng2.lng - latlng1.lng) * rad / 2),\n\t\t    a = sinDLat * sinDLat + Math.cos(lat1) * Math.cos(lat2) * sinDLon * sinDLon,\n\t\t    c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\t\treturn this.R * c;\n\t}\n});\n", "import {LatLng} from '../LatLng';\r\nimport {Bounds} from '../../geometry/Bounds';\r\nimport {Point} from '../../geometry/Point';\r\n\r\n/*\r\n * @namespace Projection\r\n * @projection L.Projection.SphericalMercator\r\n *\r\n * Spherical Mercator projection \u2014 the most common projection for online maps,\r\n * used by almost all free and commercial tile providers. Assumes that Earth is\r\n * a sphere. Used by the `EPSG:3857` CRS.\r\n */\r\n\r\nvar earthRadius = 6378137;\r\n\r\nexport var SphericalMercator = {\r\n\r\n\tR: earthRadius,\r\n\tMAX_LATITUDE: 85.0511287798,\r\n\r\n\tproject: function (latlng) {\r\n\t\tvar d = Math.PI / 180,\r\n\t\t    max = this.MAX_LATITUDE,\r\n\t\t    lat = Math.max(Math.min(max, latlng.lat), -max),\r\n\t\t    sin = Math.sin(lat * d);\r\n\r\n\t\treturn new Point(\r\n\t\t\tthis.R * latlng.lng * d,\r\n\t\t\tthis.R * Math.log((1 + sin) / (1 - sin)) / 2);\r\n\t},\r\n\r\n\tunproject: function (point) {\r\n\t\tvar d = 180 / Math.PI;\r\n\r\n\t\treturn new LatLng(\r\n\t\t\t(2 * Math.atan(Math.exp(point.y / this.R)) - (Math.PI / 2)) * d,\r\n\t\t\tpoint.x * d / this.R);\r\n\t},\r\n\r\n\tbounds: (function () {\r\n\t\tvar d = earthRadius * Math.PI;\r\n\t\treturn new Bounds([-d, -d], [d, d]);\r\n\t})()\r\n};\r\n", "import {Point} from './Point';\r\nimport * as Util from '../core/Util';\r\n\r\n/*\r\n * @class Transformation\r\n * @aka L.Transformation\r\n *\r\n * Represents an affine transformation: a set of coefficients `a`, `b`, `c`, `d`\r\n * for transforming a point of a form `(x, y)` into `(a*x + b, c*y + d)` and doing\r\n * the reverse. Used by Leaflet in its projections code.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * var transformation = L.transformation(2, 5, -1, 10),\r\n * \tp = L.point(1, 2),\r\n * \tp2 = transformation.transform(p), //  L.point(7, 8)\r\n * \tp3 = transformation.untransform(p2); //  L.point(1, 2)\r\n * ```\r\n */\r\n\r\n\r\n// factory new L.Transformation(a: Number, b: Number, c: Number, d: Number)\r\n// Creates a `Transformation` object with the given coefficients.\r\nexport function Transformation(a, b, c, d) {\r\n\tif (Util.isArray(a)) {\r\n\t\t// use array properties\r\n\t\tthis._a = a[0];\r\n\t\tthis._b = a[1];\r\n\t\tthis._c = a[2];\r\n\t\tthis._d = a[3];\r\n\t\treturn;\r\n\t}\r\n\tthis._a = a;\r\n\tthis._b = b;\r\n\tthis._c = c;\r\n\tthis._d = d;\r\n}\r\n\r\nTransformation.prototype = {\r\n\t// @method transform(point: Point, scale?: Number): Point\r\n\t// Returns a transformed point, optionally multiplied by the given scale.\r\n\t// Only accepts actual `L.Point` instances, not arrays.\r\n\ttransform: function (point, scale) { // (Point, Number) -> Point\r\n\t\treturn this._transform(point.clone(), scale);\r\n\t},\r\n\r\n\t// destructive transform (faster)\r\n\t_transform: function (point, scale) {\r\n\t\tscale = scale || 1;\r\n\t\tpoint.x = scale * (this._a * point.x + this._b);\r\n\t\tpoint.y = scale * (this._c * point.y + this._d);\r\n\t\treturn point;\r\n\t},\r\n\r\n\t// @method untransform(point: Point, scale?: Number): Point\r\n\t// Returns the reverse transformation of the given point, optionally divided\r\n\t// by the given scale. Only accepts actual `L.Point` instances, not arrays.\r\n\tuntransform: function (point, scale) {\r\n\t\tscale = scale || 1;\r\n\t\treturn new Point(\r\n\t\t        (point.x / scale - this._b) / this._a,\r\n\t\t        (point.y / scale - this._d) / this._c);\r\n\t}\r\n};\r\n\r\n// factory L.transformation(a: Number, b: Number, c: Number, d: Number)\r\n\r\n// @factory L.transformation(a: Number, b: Number, c: Number, d: Number)\r\n// Instantiates a Transformation object with the given coefficients.\r\n\r\n// @alternative\r\n// @factory L.transformation(coefficients: Array): Transformation\r\n// Expects an coefficients array of the form\r\n// `[a: Number, b: Number, c: Number, d: Number]`.\r\n\r\nexport function toTransformation(a, b, c, d) {\r\n\treturn new Transformation(a, b, c, d);\r\n}\r\n", "import {Earth} from './CRS.Earth';\r\nimport {SphericalMercator} from '../projection/Projection.SphericalMercator';\r\nimport {toTransformation} from '../../geometry/Transformation';\r\nimport * as Util from '../../core/Util';\r\n\r\n/*\r\n * @namespace CRS\r\n * @crs L.CRS.EPSG3857\r\n *\r\n * The most common CRS for online maps, used by almost all free and commercial\r\n * tile providers. Uses Spherical Mercator projection. Set in by default in\r\n * Map's `crs` option.\r\n */\r\n\r\nexport var EPSG3857 = Util.extend({}, Earth, {\r\n\tcode: 'EPSG:3857',\r\n\tprojection: SphericalMercator,\r\n\r\n\ttransformation: (function () {\r\n\t\tvar scale = 0.5 / (Math.PI * SphericalMercator.R);\r\n\t\treturn toTransformation(scale, 0.5, -scale, 0.5);\r\n\t}())\r\n});\r\n\r\nexport var EPSG900913 = Util.extend({}, EPSG3857, {\r\n\tcode: 'EPSG:900913'\r\n});\r\n", "import * as Util from '../core/Util';\nimport {Evented} from '../core/Events';\nimport * as DomUtil from '../dom/DomUtil';\n\n\n/*\n * @class PosAnimation\n * @aka L.PosAnimation\n * @inherits Evented\n * Used internally for panning animations, utilizing CSS3 Transitions for modern browsers and a timer fallback for IE6-9.\n *\n * @example\n * ```js\n * var myPositionMarker = L.marker([48.864716, 2.294694]).addTo(map);\n *\n * myPositionMarker.on(\"click\", function() {\n * \tvar pos = map.latLngToLayerPoint(myPositionMarker.getLatLng());\n * \tpos.y -= 25;\n * \tvar fx = new L.PosAnimation();\n *\n * \tfx.once('end',function() {\n * \t\tpos.y += 25;\n * \t\tfx.run(myPositionMarker._icon, pos, 0.8);\n * \t});\n *\n * \tfx.run(myPositionMarker._icon, pos, 0.3);\n * });\n *\n * ```\n *\n * @constructor L.PosAnimation()\n * Creates a `PosAnimation` object.\n *\n */\n\nexport var PosAnimation = Evented.extend({\n\n\t// @method run(el: HTMLElement, newPos: Point, duration?: Number, easeLinearity?: Number)\n\t// Run an animation of a given element to a new position, optionally setting\n\t// duration in seconds (`0.25` by default) and easing linearity factor (3rd\n\t// argument of the [cubic bezier curve](https://cubic-bezier.com/#0,0,.5,1),\n\t// `0.5` by default).\n\trun: function (el, newPos, duration, easeLinearity) {\n\t\tthis.stop();\n\n\t\tthis._el = el;\n\t\tthis._inProgress = true;\n\t\tthis._duration = duration || 0.25;\n\t\tthis._easeOutPower = 1 / Math.max(easeLinearity || 0.5, 0.2);\n\n\t\tthis._startPos = DomUtil.getPosition(el);\n\t\tthis._offset = newPos.subtract(this._startPos);\n\t\tthis._startTime = +new Date();\n\n\t\t// @event start: Event\n\t\t// Fired when the animation starts\n\t\tthis.fire('start');\n\n\t\tthis._animate();\n\t},\n\n\t// @method stop()\n\t// Stops the animation (if currently running).\n\tstop: function () {\n\t\tif (!this._inProgress) { return; }\n\n\t\tthis._step(true);\n\t\tthis._complete();\n\t},\n\n\t_animate: function () {\n\t\t// animation loop\n\t\tthis._animId = Util.requestAnimFrame(this._animate, this);\n\t\tthis._step();\n\t},\n\n\t_step: function (round) {\n\t\tvar elapsed = (+new Date()) - this._startTime,\n\t\t    duration = this._duration * 1000;\n\n\t\tif (elapsed < duration) {\n\t\t\tthis._runFrame(this._easeOut(elapsed / duration), round);\n\t\t} else {\n\t\t\tthis._runFrame(1);\n\t\t\tthis._complete();\n\t\t}\n\t},\n\n\t_runFrame: function (progress, round) {\n\t\tvar pos = this._startPos.add(this._offset.multiplyBy(progress));\n\t\tif (round) {\n\t\t\tpos._round();\n\t\t}\n\t\tDomUtil.setPosition(this._el, pos);\n\n\t\t// @event step: Event\n\t\t// Fired continuously during the animation.\n\t\tthis.fire('step');\n\t},\n\n\t_complete: function () {\n\t\tUtil.cancelAnimFrame(this._animId);\n\n\t\tthis._inProgress = false;\n\t\t// @event end: Event\n\t\t// Fired when the animation ends.\n\t\tthis.fire('end');\n\t},\n\n\t_easeOut: function (t) {\n\t\treturn 1 - Math.pow(1 - t, this._easeOutPower);\n\t}\n});\n", "import * as Util from '../core/Util';\r\nimport {Evented} from '../core/Events';\r\nimport {EPSG3857} from '../geo/crs/CRS.EPSG3857';\r\nimport {Point, toPoint} from '../geometry/Point';\r\nimport {Bounds, toBounds} from '../geometry/Bounds';\r\nimport {LatLng, toLatLng} from '../geo/LatLng';\r\nimport {LatLngBounds, toLatLngBounds} from '../geo/LatLngBounds';\r\nimport Browser from '../core/Browser';\r\nimport * as DomEvent from '../dom/DomEvent';\r\nimport * as DomUtil from '../dom/DomUtil';\r\nimport {PosAnimation} from '../dom/PosAnimation';\r\n\r\n/*\r\n * @class Map\r\n * @aka L.Map\r\n * @inherits Evented\r\n *\r\n * The central class of the API \u2014 it is used to create a map on a page and manipulate it.\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * // initialize the map on the \"map\" div with a given center and zoom\r\n * var map = L.map('map', {\r\n * \tcenter: [51.505, -0.09],\r\n * \tzoom: 13\r\n * });\r\n * ```\r\n *\r\n */\r\n\r\nexport var Map = Evented.extend({\r\n\r\n\toptions: {\r\n\t\t// @section Map State Options\r\n\t\t// @option crs: CRS = L.CRS.EPSG3857\r\n\t\t// The [Coordinate Reference System](#crs) to use. Don't change this if you're not\r\n\t\t// sure what it means.\r\n\t\tcrs: EPSG3857,\r\n\r\n\t\t// @option center: LatLng = undefined\r\n\t\t// Initial geographic center of the map\r\n\t\tcenter: undefined,\r\n\r\n\t\t// @option zoom: Number = undefined\r\n\t\t// Initial map zoom level\r\n\t\tzoom: undefined,\r\n\r\n\t\t// @option minZoom: Number = *\r\n\t\t// Minimum zoom level of the map.\r\n\t\t// If not specified and at least one `GridLayer` or `TileLayer` is in the map,\r\n\t\t// the lowest of their `minZoom` options will be used instead.\r\n\t\tminZoom: undefined,\r\n\r\n\t\t// @option maxZoom: Number = *\r\n\t\t// Maximum zoom level of the map.\r\n\t\t// If not specified and at least one `GridLayer` or `TileLayer` is in the map,\r\n\t\t// the highest of their `maxZoom` options will be used instead.\r\n\t\tmaxZoom: undefined,\r\n\r\n\t\t// @option layers: Layer[] = []\r\n\t\t// Array of layers that will be added to the map initially\r\n\t\tlayers: [],\r\n\r\n\t\t// @option maxBounds: LatLngBounds = null\r\n\t\t// When this option is set, the map restricts the view to the given\r\n\t\t// geographical bounds, bouncing the user back if the user tries to pan\r\n\t\t// outside the view. To set the restriction dynamically, use\r\n\t\t// [`setMaxBounds`](#map-setmaxbounds) method.\r\n\t\tmaxBounds: undefined,\r\n\r\n\t\t// @option renderer: Renderer = *\r\n\t\t// The default method for drawing vector layers on the map. `L.SVG`\r\n\t\t// or `L.Canvas` by default depending on browser support.\r\n\t\trenderer: undefined,\r\n\r\n\r\n\t\t// @section Animation Options\r\n\t\t// @option zoomAnimation: Boolean = true\r\n\t\t// Whether the map zoom animation is enabled. By default it's enabled\r\n\t\t// in all browsers that support CSS3 Transitions except Android.\r\n\t\tzoomAnimation: true,\r\n\r\n\t\t// @option zoomAnimationThreshold: Number = 4\r\n\t\t// Won't animate zoom if the zoom difference exceeds this value.\r\n\t\tzoomAnimationThreshold: 4,\r\n\r\n\t\t// @option fadeAnimation: Boolean = true\r\n\t\t// Whether the tile fade animation is enabled. By default it's enabled\r\n\t\t// in all browsers that support CSS3 Transitions except Android.\r\n\t\tfadeAnimation: true,\r\n\r\n\t\t// @option markerZoomAnimation: Boolean = true\r\n\t\t// Whether markers animate their zoom with the zoom animation, if disabled\r\n\t\t// they will disappear for the length of the animation. By default it's\r\n\t\t// enabled in all browsers that support CSS3 Transitions except Android.\r\n\t\tmarkerZoomAnimation: true,\r\n\r\n\t\t// @option transform3DLimit: Number = 2^23\r\n\t\t// Defines the maximum size of a CSS translation transform. The default\r\n\t\t// value should not be changed unless a web browser positions layers in\r\n\t\t// the wrong place after doing a large `panBy`.\r\n\t\ttransform3DLimit: 8388608, // Precision limit of a 32-bit float\r\n\r\n\t\t// @section Interaction Options\r\n\t\t// @option zoomSnap: Number = 1\r\n\t\t// Forces the map's zoom level to always be a multiple of this, particularly\r\n\t\t// right after a [`fitBounds()`](#map-fitbounds) or a pinch-zoom.\r\n\t\t// By default, the zoom level snaps to the nearest integer; lower values\r\n\t\t// (e.g. `0.5` or `0.1`) allow for greater granularity. A value of `0`\r\n\t\t// means the zoom level will not be snapped after `fitBounds` or a pinch-zoom.\r\n\t\tzoomSnap: 1,\r\n\r\n\t\t// @option zoomDelta: Number = 1\r\n\t\t// Controls how much the map's zoom level will change after a\r\n\t\t// [`zoomIn()`](#map-zoomin), [`zoomOut()`](#map-zoomout), pressing `+`\r\n\t\t// or `-` on the keyboard, or using the [zoom controls](#control-zoom).\r\n\t\t// Values smaller than `1` (e.g. `0.5`) allow for greater granularity.\r\n\t\tzoomDelta: 1,\r\n\r\n\t\t// @option trackResize: Boolean = true\r\n\t\t// Whether the map automatically handles browser window resize to update itself.\r\n\t\ttrackResize: true\r\n\t},\r\n\r\n\tinitialize: function (id, options) { // (HTMLElement or String, Object)\r\n\t\toptions = Util.setOptions(this, options);\r\n\r\n\t\t// Make sure to assign internal flags at the beginning,\r\n\t\t// to avoid inconsistent state in some edge cases.\r\n\t\tthis._handlers = [];\r\n\t\tthis._layers = {};\r\n\t\tthis._zoomBoundLayers = {};\r\n\t\tthis._sizeChanged = true;\r\n\r\n\t\tthis._initContainer(id);\r\n\t\tthis._initLayout();\r\n\r\n\t\t// hack for https://github.com/Leaflet/Leaflet/issues/1980\r\n\t\tthis._onResize = Util.bind(this._onResize, this);\r\n\r\n\t\tthis._initEvents();\r\n\r\n\t\tif (options.maxBounds) {\r\n\t\t\tthis.setMaxBounds(options.maxBounds);\r\n\t\t}\r\n\r\n\t\tif (options.zoom !== undefined) {\r\n\t\t\tthis._zoom = this._limitZoom(options.zoom);\r\n\t\t}\r\n\r\n\t\tif (options.center && options.zoom !== undefined) {\r\n\t\t\tthis.setView(toLatLng(options.center), options.zoom, {reset: true});\r\n\t\t}\r\n\r\n\t\tthis.callInitHooks();\r\n\r\n\t\t// don't animate on browsers without hardware-accelerated transitions or old Android/Opera\r\n\t\tthis._zoomAnimated = DomUtil.TRANSITION && Browser.any3d && !Browser.mobileOpera &&\r\n\t\t\t\tthis.options.zoomAnimation;\r\n\r\n\t\t// zoom transitions run with the same duration for all layers, so if one of transitionend events\r\n\t\t// happens after starting zoom animation (propagating to the map pane), we know that it ended globally\r\n\t\tif (this._zoomAnimated) {\r\n\t\t\tthis._createAnimProxy();\r\n\t\t\tDomEvent.on(this._proxy, DomUtil.TRANSITION_END, this._catchTransitionEnd, this);\r\n\t\t}\r\n\r\n\t\tthis._addLayers(this.options.layers);\r\n\t},\r\n\r\n\r\n\t// @section Methods for modifying map state\r\n\r\n\t// @method setView(center: LatLng, zoom: Number, options?: Zoom/pan options): this\r\n\t// Sets the view of the map (geographical center and zoom) with the given\r\n\t// animation options.\r\n\tsetView: function (center, zoom, options) {\r\n\r\n\t\tzoom = zoom === undefined ? this._zoom : this._limitZoom(zoom);\r\n\t\tcenter = this._limitCenter(toLatLng(center), zoom, this.options.maxBounds);\r\n\t\toptions = options || {};\r\n\r\n\t\tthis._stop();\r\n\r\n\t\tif (this._loaded && !options.reset && options !== true) {\r\n\r\n\t\t\tif (options.animate !== undefined) {\r\n\t\t\t\toptions.zoom = Util.extend({animate: options.animate}, options.zoom);\r\n\t\t\t\toptions.pan = Util.extend({animate: options.animate, duration: options.duration}, options.pan);\r\n\t\t\t}\r\n\r\n\t\t\t// try animating pan or zoom\r\n\t\t\tvar moved = (this._zoom !== zoom) ?\r\n\t\t\t\tthis._tryAnimatedZoom && this._tryAnimatedZoom(center, zoom, options.zoom) :\r\n\t\t\t\tthis._tryAnimatedPan(center, options.pan);\r\n\r\n\t\t\tif (moved) {\r\n\t\t\t\t// prevent resize handler call, the view will refresh after animation anyway\r\n\t\t\t\tclearTimeout(this._sizeTimer);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// animation didn't start, just reset the map view\r\n\t\tthis._resetView(center, zoom, options.pan && options.pan.noMoveStart);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method setZoom(zoom: Number, options?: Zoom/pan options): this\r\n\t// Sets the zoom of the map.\r\n\tsetZoom: function (zoom, options) {\r\n\t\tif (!this._loaded) {\r\n\t\t\tthis._zoom = zoom;\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\treturn this.setView(this.getCenter(), zoom, {zoom: options});\r\n\t},\r\n\r\n\t// @method zoomIn(delta?: Number, options?: Zoom options): this\r\n\t// Increases the zoom of the map by `delta` ([`zoomDelta`](#map-zoomdelta) by default).\r\n\tzoomIn: function (delta, options) {\r\n\t\tdelta = delta || (Browser.any3d ? this.options.zoomDelta : 1);\r\n\t\treturn this.setZoom(this._zoom + delta, options);\r\n\t},\r\n\r\n\t// @method zoomOut(delta?: Number, options?: Zoom options): this\r\n\t// Decreases the zoom of the map by `delta` ([`zoomDelta`](#map-zoomdelta) by default).\r\n\tzoomOut: function (delta, options) {\r\n\t\tdelta = delta || (Browser.any3d ? this.options.zoomDelta : 1);\r\n\t\treturn this.setZoom(this._zoom - delta, options);\r\n\t},\r\n\r\n\t// @method setZoomAround(latlng: LatLng, zoom: Number, options: Zoom options): this\r\n\t// Zooms the map while keeping a specified geographical point on the map\r\n\t// stationary (e.g. used internally for scroll zoom and double-click zoom).\r\n\t// @alternative\r\n\t// @method setZoomAround(offset: Point, zoom: Number, options: Zoom options): this\r\n\t// Zooms the map while keeping a specified pixel on the map (relative to the top-left corner) stationary.\r\n\tsetZoomAround: function (latlng, zoom, options) {\r\n\t\tvar scale = this.getZoomScale(zoom),\r\n\t\t    viewHalf = this.getSize().divideBy(2),\r\n\t\t    containerPoint = latlng instanceof Point ? latlng : this.latLngToContainerPoint(latlng),\r\n\r\n\t\t    centerOffset = containerPoint.subtract(viewHalf).multiplyBy(1 - 1 / scale),\r\n\t\t    newCenter = this.containerPointToLatLng(viewHalf.add(centerOffset));\r\n\r\n\t\treturn this.setView(newCenter, zoom, {zoom: options});\r\n\t},\r\n\r\n\t_getBoundsCenterZoom: function (bounds, options) {\r\n\r\n\t\toptions = options || {};\r\n\t\tbounds = bounds.getBounds ? bounds.getBounds() : toLatLngBounds(bounds);\r\n\r\n\t\tvar paddingTL = toPoint(options.paddingTopLeft || options.padding || [0, 0]),\r\n\t\t    paddingBR = toPoint(options.paddingBottomRight || options.padding || [0, 0]),\r\n\r\n\t\t    zoom = this.getBoundsZoom(bounds, false, paddingTL.add(paddingBR));\r\n\r\n\t\tzoom = (typeof options.maxZoom === 'number') ? Math.min(options.maxZoom, zoom) : zoom;\r\n\r\n\t\tif (zoom === Infinity) {\r\n\t\t\treturn {\r\n\t\t\t\tcenter: bounds.getCenter(),\r\n\t\t\t\tzoom: zoom\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tvar paddingOffset = paddingBR.subtract(paddingTL).divideBy(2),\r\n\r\n\t\t    swPoint = this.project(bounds.getSouthWest(), zoom),\r\n\t\t    nePoint = this.project(bounds.getNorthEast(), zoom),\r\n\t\t    center = this.unproject(swPoint.add(nePoint).divideBy(2).add(paddingOffset), zoom);\r\n\r\n\t\treturn {\r\n\t\t\tcenter: center,\r\n\t\t\tzoom: zoom\r\n\t\t};\r\n\t},\r\n\r\n\t// @method fitBounds(bounds: LatLngBounds, options?: fitBounds options): this\r\n\t// Sets a map view that contains the given geographical bounds with the\r\n\t// maximum zoom level possible.\r\n\tfitBounds: function (bounds, options) {\r\n\r\n\t\tbounds = toLatLngBounds(bounds);\r\n\r\n\t\tif (!bounds.isValid()) {\r\n\t\t\tthrow new Error('Bounds are not valid.');\r\n\t\t}\r\n\r\n\t\tvar target = this._getBoundsCenterZoom(bounds, options);\r\n\t\treturn this.setView(target.center, target.zoom, options);\r\n\t},\r\n\r\n\t// @method fitWorld(options?: fitBounds options): this\r\n\t// Sets a map view that mostly contains the whole world with the maximum\r\n\t// zoom level possible.\r\n\tfitWorld: function (options) {\r\n\t\treturn this.fitBounds([[-90, -180], [90, 180]], options);\r\n\t},\r\n\r\n\t// @method panTo(latlng: LatLng, options?: Pan options): this\r\n\t// Pans the map to a given center.\r\n\tpanTo: function (center, options) { // (LatLng)\r\n\t\treturn this.setView(center, this._zoom, {pan: options});\r\n\t},\r\n\r\n\t// @method panBy(offset: Point, options?: Pan options): this\r\n\t// Pans the map by a given number of pixels (animated).\r\n\tpanBy: function (offset, options) {\r\n\t\toffset = toPoint(offset).round();\r\n\t\toptions = options || {};\r\n\r\n\t\tif (!offset.x && !offset.y) {\r\n\t\t\treturn this.fire('moveend');\r\n\t\t}\r\n\t\t// If we pan too far, Chrome gets issues with tiles\r\n\t\t// and makes them disappear or appear in the wrong place (slightly offset) #2602\r\n\t\tif (options.animate !== true && !this.getSize().contains(offset)) {\r\n\t\t\tthis._resetView(this.unproject(this.project(this.getCenter()).add(offset)), this.getZoom());\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tif (!this._panAnim) {\r\n\t\t\tthis._panAnim = new PosAnimation();\r\n\r\n\t\t\tthis._panAnim.on({\r\n\t\t\t\t'step': this._onPanTransitionStep,\r\n\t\t\t\t'end': this._onPanTransitionEnd\r\n\t\t\t}, this);\r\n\t\t}\r\n\r\n\t\t// don't fire movestart if animating inertia\r\n\t\tif (!options.noMoveStart) {\r\n\t\t\tthis.fire('movestart');\r\n\t\t}\r\n\r\n\t\t// animate pan unless animate: false specified\r\n\t\tif (options.animate !== false) {\r\n\t\t\tDomUtil.addClass(this._mapPane, 'leaflet-pan-anim');\r\n\r\n\t\t\tvar newPos = this._getMapPanePos().subtract(offset).round();\r\n\t\t\tthis._panAnim.run(this._mapPane, newPos, options.duration || 0.25, options.easeLinearity);\r\n\t\t} else {\r\n\t\t\tthis._rawPanBy(offset);\r\n\t\t\tthis.fire('move').fire('moveend');\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method flyTo(latlng: LatLng, zoom?: Number, options?: Zoom/pan options): this\r\n\t// Sets the view of the map (geographical center and zoom) performing a smooth\r\n\t// pan-zoom animation.\r\n\tflyTo: function (targetCenter, targetZoom, options) {\r\n\r\n\t\toptions = options || {};\r\n\t\tif (options.animate === false || !Browser.any3d) {\r\n\t\t\treturn this.setView(targetCenter, targetZoom, options);\r\n\t\t}\r\n\r\n\t\tthis._stop();\r\n\r\n\t\tvar from = this.project(this.getCenter()),\r\n\t\t    to = this.project(targetCenter),\r\n\t\t    size = this.getSize(),\r\n\t\t    startZoom = this._zoom;\r\n\r\n\t\ttargetCenter = toLatLng(targetCenter);\r\n\t\ttargetZoom = targetZoom === undefined ? startZoom : targetZoom;\r\n\r\n\t\tvar w0 = Math.max(size.x, size.y),\r\n\t\t    w1 = w0 * this.getZoomScale(startZoom, targetZoom),\r\n\t\t    u1 = (to.distanceTo(from)) || 1,\r\n\t\t    rho = 1.42,\r\n\t\t    rho2 = rho * rho;\r\n\r\n\t\tfunction r(i) {\r\n\t\t\tvar s1 = i ? -1 : 1,\r\n\t\t\t    s2 = i ? w1 : w0,\r\n\t\t\t    t1 = w1 * w1 - w0 * w0 + s1 * rho2 * rho2 * u1 * u1,\r\n\t\t\t    b1 = 2 * s2 * rho2 * u1,\r\n\t\t\t    b = t1 / b1,\r\n\t\t\t    sq = Math.sqrt(b * b + 1) - b;\r\n\r\n\t\t\t    // workaround for floating point precision bug when sq = 0, log = -Infinite,\r\n\t\t\t    // thus triggering an infinite loop in flyTo\r\n\t\t\t    var log = sq < 0.000000001 ? -18 : Math.log(sq);\r\n\r\n\t\t\treturn log;\r\n\t\t}\r\n\r\n\t\tfunction sinh(n) { return (Math.exp(n) - Math.exp(-n)) / 2; }\r\n\t\tfunction cosh(n) { return (Math.exp(n) + Math.exp(-n)) / 2; }\r\n\t\tfunction tanh(n) { return sinh(n) / cosh(n); }\r\n\r\n\t\tvar r0 = r(0);\r\n\r\n\t\tfunction w(s) { return w0 * (cosh(r0) / cosh(r0 + rho * s)); }\r\n\t\tfunction u(s) { return w0 * (cosh(r0) * tanh(r0 + rho * s) - sinh(r0)) / rho2; }\r\n\r\n\t\tfunction easeOut(t) { return 1 - Math.pow(1 - t, 1.5); }\r\n\r\n\t\tvar start = Date.now(),\r\n\t\t    S = (r(1) - r0) / rho,\r\n\t\t    duration = options.duration ? 1000 * options.duration : 1000 * S * 0.8;\r\n\r\n\t\tfunction frame() {\r\n\t\t\tvar t = (Date.now() - start) / duration,\r\n\t\t\t    s = easeOut(t) * S;\r\n\r\n\t\t\tif (t <= 1) {\r\n\t\t\t\tthis._flyToFrame = Util.requestAnimFrame(frame, this);\r\n\r\n\t\t\t\tthis._move(\r\n\t\t\t\t\tthis.unproject(from.add(to.subtract(from).multiplyBy(u(s) / u1)), startZoom),\r\n\t\t\t\t\tthis.getScaleZoom(w0 / w(s), startZoom),\r\n\t\t\t\t\t{flyTo: true});\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis\r\n\t\t\t\t\t._move(targetCenter, targetZoom)\r\n\t\t\t\t\t._moveEnd(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._moveStart(true, options.noMoveStart);\r\n\r\n\t\tframe.call(this);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method flyToBounds(bounds: LatLngBounds, options?: fitBounds options): this\r\n\t// Sets the view of the map with a smooth animation like [`flyTo`](#map-flyto),\r\n\t// but takes a bounds parameter like [`fitBounds`](#map-fitbounds).\r\n\tflyToBounds: function (bounds, options) {\r\n\t\tvar target = this._getBoundsCenterZoom(bounds, options);\r\n\t\treturn this.flyTo(target.center, target.zoom, options);\r\n\t},\r\n\r\n\t// @method setMaxBounds(bounds: LatLngBounds): this\r\n\t// Restricts the map view to the given bounds (see the [maxBounds](#map-maxbounds) option).\r\n\tsetMaxBounds: function (bounds) {\r\n\t\tbounds = toLatLngBounds(bounds);\r\n\r\n\t\tif (this.listens('moveend', this._panInsideMaxBounds)) {\r\n\t\t\tthis.off('moveend', this._panInsideMaxBounds);\r\n\t\t}\r\n\r\n\t\tif (!bounds.isValid()) {\r\n\t\t\tthis.options.maxBounds = null;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tthis.options.maxBounds = bounds;\r\n\r\n\t\tif (this._loaded) {\r\n\t\t\tthis._panInsideMaxBounds();\r\n\t\t}\r\n\r\n\t\treturn this.on('moveend', this._panInsideMaxBounds);\r\n\t},\r\n\r\n\t// @method setMinZoom(zoom: Number): this\r\n\t// Sets the lower limit for the available zoom levels (see the [minZoom](#map-minzoom) option).\r\n\tsetMinZoom: function (zoom) {\r\n\t\tvar oldZoom = this.options.minZoom;\r\n\t\tthis.options.minZoom = zoom;\r\n\r\n\t\tif (this._loaded && oldZoom !== zoom) {\r\n\t\t\tthis.fire('zoomlevelschange');\r\n\r\n\t\t\tif (this.getZoom() < this.options.minZoom) {\r\n\t\t\t\treturn this.setZoom(zoom);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method setMaxZoom(zoom: Number): this\r\n\t// Sets the upper limit for the available zoom levels (see the [maxZoom](#map-maxzoom) option).\r\n\tsetMaxZoom: function (zoom) {\r\n\t\tvar oldZoom = this.options.maxZoom;\r\n\t\tthis.options.maxZoom = zoom;\r\n\r\n\t\tif (this._loaded && oldZoom !== zoom) {\r\n\t\t\tthis.fire('zoomlevelschange');\r\n\r\n\t\t\tif (this.getZoom() > this.options.maxZoom) {\r\n\t\t\t\treturn this.setZoom(zoom);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method panInsideBounds(bounds: LatLngBounds, options?: Pan options): this\r\n\t// Pans the map to the closest view that would lie inside the given bounds (if it's not already), controlling the animation using the options specific, if any.\r\n\tpanInsideBounds: function (bounds, options) {\r\n\t\tthis._enforcingBounds = true;\r\n\t\tvar center = this.getCenter(),\r\n\t\t    newCenter = this._limitCenter(center, this._zoom, toLatLngBounds(bounds));\r\n\r\n\t\tif (!center.equals(newCenter)) {\r\n\t\t\tthis.panTo(newCenter, options);\r\n\t\t}\r\n\r\n\t\tthis._enforcingBounds = false;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method panInside(latlng: LatLng, options?: padding options): this\r\n\t// Pans the map the minimum amount to make the `latlng` visible. Use\r\n\t// padding options to fit the display to more restricted bounds.\r\n\t// If `latlng` is already within the (optionally padded) display bounds,\r\n\t// the map will not be panned.\r\n\tpanInside: function (latlng, options) {\r\n\t\toptions = options || {};\r\n\r\n\t\tvar paddingTL = toPoint(options.paddingTopLeft || options.padding || [0, 0]),\r\n\t\t    paddingBR = toPoint(options.paddingBottomRight || options.padding || [0, 0]),\r\n\t\t    pixelCenter = this.project(this.getCenter()),\r\n\t\t    pixelPoint = this.project(latlng),\r\n\t\t    pixelBounds = this.getPixelBounds(),\r\n\t\t    paddedBounds = toBounds([pixelBounds.min.add(paddingTL), pixelBounds.max.subtract(paddingBR)]),\r\n\t\t    paddedSize = paddedBounds.getSize();\r\n\r\n\t\tif (!paddedBounds.contains(pixelPoint)) {\r\n\t\t\tthis._enforcingBounds = true;\r\n\t\t\tvar centerOffset = pixelPoint.subtract(paddedBounds.getCenter());\r\n\t\t\tvar offset = paddedBounds.extend(pixelPoint).getSize().subtract(paddedSize);\r\n\t\t\tpixelCenter.x += centerOffset.x < 0 ? -offset.x : offset.x;\r\n\t\t\tpixelCenter.y += centerOffset.y < 0 ? -offset.y : offset.y;\r\n\t\t\tthis.panTo(this.unproject(pixelCenter), options);\r\n\t\t\tthis._enforcingBounds = false;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method invalidateSize(options: Zoom/pan options): this\r\n\t// Checks if the map container size changed and updates the map if so \u2014\r\n\t// call it after you've changed the map size dynamically, also animating\r\n\t// pan by default. If `options.pan` is `false`, panning will not occur.\r\n\t// If `options.debounceMoveend` is `true`, it will delay `moveend` event so\r\n\t// that it doesn't happen often even if the method is called many\r\n\t// times in a row.\r\n\r\n\t// @alternative\r\n\t// @method invalidateSize(animate: Boolean): this\r\n\t// Checks if the map container size changed and updates the map if so \u2014\r\n\t// call it after you've changed the map size dynamically, also animating\r\n\t// pan by default.\r\n\tinvalidateSize: function (options) {\r\n\t\tif (!this._loaded) { return this; }\r\n\r\n\t\toptions = Util.extend({\r\n\t\t\tanimate: false,\r\n\t\t\tpan: true\r\n\t\t}, options === true ? {animate: true} : options);\r\n\r\n\t\tvar oldSize = this.getSize();\r\n\t\tthis._sizeChanged = true;\r\n\t\tthis._lastCenter = null;\r\n\r\n\t\tvar newSize = this.getSize(),\r\n\t\t    oldCenter = oldSize.divideBy(2).round(),\r\n\t\t    newCenter = newSize.divideBy(2).round(),\r\n\t\t    offset = oldCenter.subtract(newCenter);\r\n\r\n\t\tif (!offset.x && !offset.y) { return this; }\r\n\r\n\t\tif (options.animate && options.pan) {\r\n\t\t\tthis.panBy(offset);\r\n\r\n\t\t} else {\r\n\t\t\tif (options.pan) {\r\n\t\t\t\tthis._rawPanBy(offset);\r\n\t\t\t}\r\n\r\n\t\t\tthis.fire('move');\r\n\r\n\t\t\tif (options.debounceMoveend) {\r\n\t\t\t\tclearTimeout(this._sizeTimer);\r\n\t\t\t\tthis._sizeTimer = setTimeout(Util.bind(this.fire, this, 'moveend'), 200);\r\n\t\t\t} else {\r\n\t\t\t\tthis.fire('moveend');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// @section Map state change events\r\n\t\t// @event resize: ResizeEvent\r\n\t\t// Fired when the map is resized.\r\n\t\treturn this.fire('resize', {\r\n\t\t\toldSize: oldSize,\r\n\t\t\tnewSize: newSize\r\n\t\t});\r\n\t},\r\n\r\n\t// @section Methods for modifying map state\r\n\t// @method stop(): this\r\n\t// Stops the currently running `panTo` or `flyTo` animation, if any.\r\n\tstop: function () {\r\n\t\tthis.setZoom(this._limitZoom(this._zoom));\r\n\t\tif (!this.options.zoomSnap) {\r\n\t\t\tthis.fire('viewreset');\r\n\t\t}\r\n\t\treturn this._stop();\r\n\t},\r\n\r\n\t// @section Geolocation methods\r\n\t// @method locate(options?: Locate options): this\r\n\t// Tries to locate the user using the Geolocation API, firing a [`locationfound`](#map-locationfound)\r\n\t// event with location data on success or a [`locationerror`](#map-locationerror) event on failure,\r\n\t// and optionally sets the map view to the user's location with respect to\r\n\t// detection accuracy (or to the world view if geolocation failed).\r\n\t// Note that, if your page doesn't use HTTPS, this method will fail in\r\n\t// modern browsers ([Chrome 50 and newer](https://sites.google.com/a/chromium.org/dev/Home/chromium-security/deprecating-powerful-features-on-insecure-origins))\r\n\t// See `Locate options` for more details.\r\n\tlocate: function (options) {\r\n\r\n\t\toptions = this._locateOptions = Util.extend({\r\n\t\t\ttimeout: 10000,\r\n\t\t\twatch: false\r\n\t\t\t// setView: false\r\n\t\t\t// maxZoom: <Number>\r\n\t\t\t// maximumAge: 0\r\n\t\t\t// enableHighAccuracy: false\r\n\t\t}, options);\r\n\r\n\t\tif (!('geolocation' in navigator)) {\r\n\t\t\tthis._handleGeolocationError({\r\n\t\t\t\tcode: 0,\r\n\t\t\t\tmessage: 'Geolocation not supported.'\r\n\t\t\t});\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tvar onResponse = Util.bind(this._handleGeolocationResponse, this),\r\n\t\t    onError = Util.bind(this._handleGeolocationError, this);\r\n\r\n\t\tif (options.watch) {\r\n\t\t\tthis._locationWatchId =\r\n\t\t\t        navigator.geolocation.watchPosition(onResponse, onError, options);\r\n\t\t} else {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(onResponse, onError, options);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method stopLocate(): this\r\n\t// Stops watching location previously initiated by `map.locate({watch: true})`\r\n\t// and aborts resetting the map view if map.locate was called with\r\n\t// `{setView: true}`.\r\n\tstopLocate: function () {\r\n\t\tif (navigator.geolocation && navigator.geolocation.clearWatch) {\r\n\t\t\tnavigator.geolocation.clearWatch(this._locationWatchId);\r\n\t\t}\r\n\t\tif (this._locateOptions) {\r\n\t\t\tthis._locateOptions.setView = false;\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_handleGeolocationError: function (error) {\r\n\t\tif (!this._container._leaflet_id) { return; }\r\n\r\n\t\tvar c = error.code,\r\n\t\t    message = error.message ||\r\n\t\t            (c === 1 ? 'permission denied' :\r\n\t\t            (c === 2 ? 'position unavailable' : 'timeout'));\r\n\r\n\t\tif (this._locateOptions.setView && !this._loaded) {\r\n\t\t\tthis.fitWorld();\r\n\t\t}\r\n\r\n\t\t// @section Location events\r\n\t\t// @event locationerror: ErrorEvent\r\n\t\t// Fired when geolocation (using the [`locate`](#map-locate) method) failed.\r\n\t\tthis.fire('locationerror', {\r\n\t\t\tcode: c,\r\n\t\t\tmessage: 'Geolocation error: ' + message + '.'\r\n\t\t});\r\n\t},\r\n\r\n\t_handleGeolocationResponse: function (pos) {\r\n\t\tif (!this._container._leaflet_id) { return; }\r\n\r\n\t\tvar lat = pos.coords.latitude,\r\n\t\t    lng = pos.coords.longitude,\r\n\t\t    latlng = new LatLng(lat, lng),\r\n\t\t    bounds = latlng.toBounds(pos.coords.accuracy * 2),\r\n\t\t    options = this._locateOptions;\r\n\r\n\t\tif (options.setView) {\r\n\t\t\tvar zoom = this.getBoundsZoom(bounds);\r\n\t\t\tthis.setView(latlng, options.maxZoom ? Math.min(zoom, options.maxZoom) : zoom);\r\n\t\t}\r\n\r\n\t\tvar data = {\r\n\t\t\tlatlng: latlng,\r\n\t\t\tbounds: bounds,\r\n\t\t\ttimestamp: pos.timestamp\r\n\t\t};\r\n\r\n\t\tfor (var i in pos.coords) {\r\n\t\t\tif (typeof pos.coords[i] === 'number') {\r\n\t\t\t\tdata[i] = pos.coords[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// @event locationfound: LocationEvent\r\n\t\t// Fired when geolocation (using the [`locate`](#map-locate) method)\r\n\t\t// went successfully.\r\n\t\tthis.fire('locationfound', data);\r\n\t},\r\n\r\n\t// TODO Appropriate docs section?\r\n\t// @section Other Methods\r\n\t// @method addHandler(name: String, HandlerClass: Function): this\r\n\t// Adds a new `Handler` to the map, given its name and constructor function.\r\n\taddHandler: function (name, HandlerClass) {\r\n\t\tif (!HandlerClass) { return this; }\r\n\r\n\t\tvar handler = this[name] = new HandlerClass(this);\r\n\r\n\t\tthis._handlers.push(handler);\r\n\r\n\t\tif (this.options[name]) {\r\n\t\t\thandler.enable();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method remove(): this\r\n\t// Destroys the map and clears all related event listeners.\r\n\tremove: function () {\r\n\r\n\t\tthis._initEvents(true);\r\n\t\tif (this.options.maxBounds) { this.off('moveend', this._panInsideMaxBounds); }\r\n\r\n\t\tif (this._containerId !== this._container._leaflet_id) {\r\n\t\t\tthrow new Error('Map container is being reused by another instance');\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\t// throws error in IE6-8\r\n\t\t\tdelete this._container._leaflet_id;\r\n\t\t\tdelete this._containerId;\r\n\t\t} catch (e) {\r\n\t\t\t/*eslint-disable */\r\n\t\t\tthis._container._leaflet_id = undefined;\r\n\t\t\t/* eslint-enable */\r\n\t\t\tthis._containerId = undefined;\r\n\t\t}\r\n\r\n\t\tif (this._locationWatchId !== undefined) {\r\n\t\t\tthis.stopLocate();\r\n\t\t}\r\n\r\n\t\tthis._stop();\r\n\r\n\t\tDomUtil.remove(this._mapPane);\r\n\r\n\t\tif (this._clearControlPos) {\r\n\t\t\tthis._clearControlPos();\r\n\t\t}\r\n\t\tif (this._resizeRequest) {\r\n\t\t\tUtil.cancelAnimFrame(this._resizeRequest);\r\n\t\t\tthis._resizeRequest = null;\r\n\t\t}\r\n\r\n\t\tthis._clearHandlers();\r\n\r\n\t\tif (this._loaded) {\r\n\t\t\t// @section Map state change events\r\n\t\t\t// @event unload: Event\r\n\t\t\t// Fired when the map is destroyed with [remove](#map-remove) method.\r\n\t\t\tthis.fire('unload');\r\n\t\t}\r\n\r\n\t\tvar i;\r\n\t\tfor (i in this._layers) {\r\n\t\t\tthis._layers[i].remove();\r\n\t\t}\r\n\t\tfor (i in this._panes) {\r\n\t\t\tDomUtil.remove(this._panes[i]);\r\n\t\t}\r\n\r\n\t\tthis._layers = [];\r\n\t\tthis._panes = [];\r\n\t\tdelete this._mapPane;\r\n\t\tdelete this._renderer;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @section Other Methods\r\n\t// @method createPane(name: String, container?: HTMLElement): HTMLElement\r\n\t// Creates a new [map pane](#map-pane) with the given name if it doesn't exist already,\r\n\t// then returns it. The pane is created as a child of `container`, or\r\n\t// as a child of the main map pane if not set.\r\n\tcreatePane: function (name, container) {\r\n\t\tvar className = 'leaflet-pane' + (name ? ' leaflet-' + name.replace('Pane', '') + '-pane' : ''),\r\n\t\t    pane = DomUtil.create('div', className, container || this._mapPane);\r\n\r\n\t\tif (name) {\r\n\t\t\tthis._panes[name] = pane;\r\n\t\t}\r\n\t\treturn pane;\r\n\t},\r\n\r\n\t// @section Methods for Getting Map State\r\n\r\n\t// @method getCenter(): LatLng\r\n\t// Returns the geographical center of the map view\r\n\tgetCenter: function () {\r\n\t\tthis._checkIfLoaded();\r\n\r\n\t\tif (this._lastCenter && !this._moved()) {\r\n\t\t\treturn this._lastCenter.clone();\r\n\t\t}\r\n\t\treturn this.layerPointToLatLng(this._getCenterLayerPoint());\r\n\t},\r\n\r\n\t// @method getZoom(): Number\r\n\t// Returns the current zoom level of the map view\r\n\tgetZoom: function () {\r\n\t\treturn this._zoom;\r\n\t},\r\n\r\n\t// @method getBounds(): LatLngBounds\r\n\t// Returns the geographical bounds visible in the current map view\r\n\tgetBounds: function () {\r\n\t\tvar bounds = this.getPixelBounds(),\r\n\t\t    sw = this.unproject(bounds.getBottomLeft()),\r\n\t\t    ne = this.unproject(bounds.getTopRight());\r\n\r\n\t\treturn new LatLngBounds(sw, ne);\r\n\t},\r\n\r\n\t// @method getMinZoom(): Number\r\n\t// Returns the minimum zoom level of the map (if set in the `minZoom` option of the map or of any layers), or `0` by default.\r\n\tgetMinZoom: function () {\r\n\t\treturn this.options.minZoom === undefined ? this._layersMinZoom || 0 : this.options.minZoom;\r\n\t},\r\n\r\n\t// @method getMaxZoom(): Number\r\n\t// Returns the maximum zoom level of the map (if set in the `maxZoom` option of the map or of any layers).\r\n\tgetMaxZoom: function () {\r\n\t\treturn this.options.maxZoom === undefined ?\r\n\t\t\t(this._layersMaxZoom === undefined ? Infinity : this._layersMaxZoom) :\r\n\t\t\tthis.options.maxZoom;\r\n\t},\r\n\r\n\t// @method getBoundsZoom(bounds: LatLngBounds, inside?: Boolean, padding?: Point): Number\r\n\t// Returns the maximum zoom level on which the given bounds fit to the map\r\n\t// view in its entirety. If `inside` (optional) is set to `true`, the method\r\n\t// instead returns the minimum zoom level on which the map view fits into\r\n\t// the given bounds in its entirety.\r\n\tgetBoundsZoom: function (bounds, inside, padding) { // (LatLngBounds[, Boolean, Point]) -> Number\r\n\t\tbounds = toLatLngBounds(bounds);\r\n\t\tpadding = toPoint(padding || [0, 0]);\r\n\r\n\t\tvar zoom = this.getZoom() || 0,\r\n\t\t    min = this.getMinZoom(),\r\n\t\t    max = this.getMaxZoom(),\r\n\t\t    nw = bounds.getNorthWest(),\r\n\t\t    se = bounds.getSouthEast(),\r\n\t\t    size = this.getSize().subtract(padding),\r\n\t\t    boundsSize = toBounds(this.project(se, zoom), this.project(nw, zoom)).getSize(),\r\n\t\t    snap = Browser.any3d ? this.options.zoomSnap : 1,\r\n\t\t    scalex = size.x / boundsSize.x,\r\n\t\t    scaley = size.y / boundsSize.y,\r\n\t\t    scale = inside ? Math.max(scalex, scaley) : Math.min(scalex, scaley);\r\n\r\n\t\tzoom = this.getScaleZoom(scale, zoom);\r\n\r\n\t\tif (snap) {\r\n\t\t\tzoom = Math.round(zoom / (snap / 100)) * (snap / 100); // don't jump if within 1% of a snap level\r\n\t\t\tzoom = inside ? Math.ceil(zoom / snap) * snap : Math.floor(zoom / snap) * snap;\r\n\t\t}\r\n\r\n\t\treturn Math.max(min, Math.min(max, zoom));\r\n\t},\r\n\r\n\t// @method getSize(): Point\r\n\t// Returns the current size of the map container (in pixels).\r\n\tgetSize: function () {\r\n\t\tif (!this._size || this._sizeChanged) {\r\n\t\t\tthis._size = new Point(\r\n\t\t\t\tthis._container.clientWidth || 0,\r\n\t\t\t\tthis._container.clientHeight || 0);\r\n\r\n\t\t\tthis._sizeChanged = false;\r\n\t\t}\r\n\t\treturn this._size.clone();\r\n\t},\r\n\r\n\t// @method getPixelBounds(): Bounds\r\n\t// Returns the bounds of the current map view in projected pixel\r\n\t// coordinates (sometimes useful in layer and overlay implementations).\r\n\tgetPixelBounds: function (center, zoom) {\r\n\t\tvar topLeftPoint = this._getTopLeftPoint(center, zoom);\r\n\t\treturn new Bounds(topLeftPoint, topLeftPoint.add(this.getSize()));\r\n\t},\r\n\r\n\t// TODO: Check semantics - isn't the pixel origin the 0,0 coord relative to\r\n\t// the map pane? \"left point of the map layer\" can be confusing, specially\r\n\t// since there can be negative offsets.\r\n\t// @method getPixelOrigin(): Point\r\n\t// Returns the projected pixel coordinates of the top left point of\r\n\t// the map layer (useful in custom layer and overlay implementations).\r\n\tgetPixelOrigin: function () {\r\n\t\tthis._checkIfLoaded();\r\n\t\treturn this._pixelOrigin;\r\n\t},\r\n\r\n\t// @method getPixelWorldBounds(zoom?: Number): Bounds\r\n\t// Returns the world's bounds in pixel coordinates for zoom level `zoom`.\r\n\t// If `zoom` is omitted, the map's current zoom level is used.\r\n\tgetPixelWorldBounds: function (zoom) {\r\n\t\treturn this.options.crs.getProjectedBounds(zoom === undefined ? this.getZoom() : zoom);\r\n\t},\r\n\r\n\t// @section Other Methods\r\n\r\n\t// @method getPane(pane: String|HTMLElement): HTMLElement\r\n\t// Returns a [map pane](#map-pane), given its name or its HTML element (its identity).\r\n\tgetPane: function (pane) {\r\n\t\treturn typeof pane === 'string' ? this._panes[pane] : pane;\r\n\t},\r\n\r\n\t// @method getPanes(): Object\r\n\t// Returns a plain object containing the names of all [panes](#map-pane) as keys and\r\n\t// the panes as values.\r\n\tgetPanes: function () {\r\n\t\treturn this._panes;\r\n\t},\r\n\r\n\t// @method getContainer: HTMLElement\r\n\t// Returns the HTML element that contains the map.\r\n\tgetContainer: function () {\r\n\t\treturn this._container;\r\n\t},\r\n\r\n\r\n\t// @section Conversion Methods\r\n\r\n\t// @method getZoomScale(toZoom: Number, fromZoom: Number): Number\r\n\t// Returns the scale factor to be applied to a map transition from zoom level\r\n\t// `fromZoom` to `toZoom`. Used internally to help with zoom animations.\r\n\tgetZoomScale: function (toZoom, fromZoom) {\r\n\t\t// TODO replace with universal implementation after refactoring projections\r\n\t\tvar crs = this.options.crs;\r\n\t\tfromZoom = fromZoom === undefined ? this._zoom : fromZoom;\r\n\t\treturn crs.scale(toZoom) / crs.scale(fromZoom);\r\n\t},\r\n\r\n\t// @method getScaleZoom(scale: Number, fromZoom: Number): Number\r\n\t// Returns the zoom level that the map would end up at, if it is at `fromZoom`\r\n\t// level and everything is scaled by a factor of `scale`. Inverse of\r\n\t// [`getZoomScale`](#map-getZoomScale).\r\n\tgetScaleZoom: function (scale, fromZoom) {\r\n\t\tvar crs = this.options.crs;\r\n\t\tfromZoom = fromZoom === undefined ? this._zoom : fromZoom;\r\n\t\tvar zoom = crs.zoom(scale * crs.scale(fromZoom));\r\n\t\treturn isNaN(zoom) ? Infinity : zoom;\r\n\t},\r\n\r\n\t// @method project(latlng: LatLng, zoom: Number): Point\r\n\t// Projects a geographical coordinate `LatLng` according to the projection\r\n\t// of the map's CRS, then scales it according to `zoom` and the CRS's\r\n\t// `Transformation`. The result is pixel coordinate relative to\r\n\t// the CRS origin.\r\n\tproject: function (latlng, zoom) {\r\n\t\tzoom = zoom === undefined ? this._zoom : zoom;\r\n\t\treturn this.options.crs.latLngToPoint(toLatLng(latlng), zoom);\r\n\t},\r\n\r\n\t// @method unproject(point: Point, zoom: Number): LatLng\r\n\t// Inverse of [`project`](#map-project).\r\n\tunproject: function (point, zoom) {\r\n\t\tzoom = zoom === undefined ? this._zoom : zoom;\r\n\t\treturn this.options.crs.pointToLatLng(toPoint(point), zoom);\r\n\t},\r\n\r\n\t// @method layerPointToLatLng(point: Point): LatLng\r\n\t// Given a pixel coordinate relative to the [origin pixel](#map-getpixelorigin),\r\n\t// returns the corresponding geographical coordinate (for the current zoom level).\r\n\tlayerPointToLatLng: function (point) {\r\n\t\tvar projectedPoint = toPoint(point).add(this.getPixelOrigin());\r\n\t\treturn this.unproject(projectedPoint);\r\n\t},\r\n\r\n\t// @method latLngToLayerPoint(latlng: LatLng): Point\r\n\t// Given a geographical coordinate, returns the corresponding pixel coordinate\r\n\t// relative to the [origin pixel](#map-getpixelorigin).\r\n\tlatLngToLayerPoint: function (latlng) {\r\n\t\tvar projectedPoint = this.project(toLatLng(latlng))._round();\r\n\t\treturn projectedPoint._subtract(this.getPixelOrigin());\r\n\t},\r\n\r\n\t// @method wrapLatLng(latlng: LatLng): LatLng\r\n\t// Returns a `LatLng` where `lat` and `lng` has been wrapped according to the\r\n\t// map's CRS's `wrapLat` and `wrapLng` properties, if they are outside the\r\n\t// CRS's bounds.\r\n\t// By default this means longitude is wrapped around the dateline so its\r\n\t// value is between -180 and +180 degrees.\r\n\twrapLatLng: function (latlng) {\r\n\t\treturn this.options.crs.wrapLatLng(toLatLng(latlng));\r\n\t},\r\n\r\n\t// @method wrapLatLngBounds(bounds: LatLngBounds): LatLngBounds\r\n\t// Returns a `LatLngBounds` with the same size as the given one, ensuring that\r\n\t// its center is within the CRS's bounds.\r\n\t// By default this means the center longitude is wrapped around the dateline so its\r\n\t// value is between -180 and +180 degrees, and the majority of the bounds\r\n\t// overlaps the CRS's bounds.\r\n\twrapLatLngBounds: function (latlng) {\r\n\t\treturn this.options.crs.wrapLatLngBounds(toLatLngBounds(latlng));\r\n\t},\r\n\r\n\t// @method distance(latlng1: LatLng, latlng2: LatLng): Number\r\n\t// Returns the distance between two geographical coordinates according to\r\n\t// the map's CRS. By default this measures distance in meters.\r\n\tdistance: function (latlng1, latlng2) {\r\n\t\treturn this.options.crs.distance(toLatLng(latlng1), toLatLng(latlng2));\r\n\t},\r\n\r\n\t// @method containerPointToLayerPoint(point: Point): Point\r\n\t// Given a pixel coordinate relative to the map container, returns the corresponding\r\n\t// pixel coordinate relative to the [origin pixel](#map-getpixelorigin).\r\n\tcontainerPointToLayerPoint: function (point) { // (Point)\r\n\t\treturn toPoint(point).subtract(this._getMapPanePos());\r\n\t},\r\n\r\n\t// @method layerPointToContainerPoint(point: Point): Point\r\n\t// Given a pixel coordinate relative to the [origin pixel](#map-getpixelorigin),\r\n\t// returns the corresponding pixel coordinate relative to the map container.\r\n\tlayerPointToContainerPoint: function (point) { // (Point)\r\n\t\treturn toPoint(point).add(this._getMapPanePos());\r\n\t},\r\n\r\n\t// @method containerPointToLatLng(point: Point): LatLng\r\n\t// Given a pixel coordinate relative to the map container, returns\r\n\t// the corresponding geographical coordinate (for the current zoom level).\r\n\tcontainerPointToLatLng: function (point) {\r\n\t\tvar layerPoint = this.containerPointToLayerPoint(toPoint(point));\r\n\t\treturn this.layerPointToLatLng(layerPoint);\r\n\t},\r\n\r\n\t// @method latLngToContainerPoint(latlng: LatLng): Point\r\n\t// Given a geographical coordinate, returns the corresponding pixel coordinate\r\n\t// relative to the map container.\r\n\tlatLngToContainerPoint: function (latlng) {\r\n\t\treturn this.layerPointToContainerPoint(this.latLngToLayerPoint(toLatLng(latlng)));\r\n\t},\r\n\r\n\t// @method mouseEventToContainerPoint(ev: MouseEvent): Point\r\n\t// Given a MouseEvent object, returns the pixel coordinate relative to the\r\n\t// map container where the event took place.\r\n\tmouseEventToContainerPoint: function (e) {\r\n\t\treturn DomEvent.getMousePosition(e, this._container);\r\n\t},\r\n\r\n\t// @method mouseEventToLayerPoint(ev: MouseEvent): Point\r\n\t// Given a MouseEvent object, returns the pixel coordinate relative to\r\n\t// the [origin pixel](#map-getpixelorigin) where the event took place.\r\n\tmouseEventToLayerPoint: function (e) {\r\n\t\treturn this.containerPointToLayerPoint(this.mouseEventToContainerPoint(e));\r\n\t},\r\n\r\n\t// @method mouseEventToLatLng(ev: MouseEvent): LatLng\r\n\t// Given a MouseEvent object, returns geographical coordinate where the\r\n\t// event took place.\r\n\tmouseEventToLatLng: function (e) { // (MouseEvent)\r\n\t\treturn this.layerPointToLatLng(this.mouseEventToLayerPoint(e));\r\n\t},\r\n\r\n\r\n\t// map initialization methods\r\n\r\n\t_initContainer: function (id) {\r\n\t\tvar container = this._container = DomUtil.get(id);\r\n\r\n\t\tif (!container) {\r\n\t\t\tthrow new Error('Map container not found.');\r\n\t\t} else if (container._leaflet_id) {\r\n\t\t\tthrow new Error('Map container is already initialized.');\r\n\t\t}\r\n\r\n\t\tDomEvent.on(container, 'scroll', this._onScroll, this);\r\n\t\tthis._containerId = Util.stamp(container);\r\n\t},\r\n\r\n\t_initLayout: function () {\r\n\t\tvar container = this._container;\r\n\r\n\t\tthis._fadeAnimated = this.options.fadeAnimation && Browser.any3d;\r\n\r\n\t\tDomUtil.addClass(container, 'leaflet-container' +\r\n\t\t\t(Browser.touch ? ' leaflet-touch' : '') +\r\n\t\t\t(Browser.retina ? ' leaflet-retina' : '') +\r\n\t\t\t(Browser.ielt9 ? ' leaflet-oldie' : '') +\r\n\t\t\t(Browser.safari ? ' leaflet-safari' : '') +\r\n\t\t\t(this._fadeAnimated ? ' leaflet-fade-anim' : ''));\r\n\r\n\t\tvar position = DomUtil.getStyle(container, 'position');\r\n\r\n\t\tif (position !== 'absolute' && position !== 'relative' && position !== 'fixed' && position !== 'sticky') {\r\n\t\t\tcontainer.style.position = 'relative';\r\n\t\t}\r\n\r\n\t\tthis._initPanes();\r\n\r\n\t\tif (this._initControlPos) {\r\n\t\t\tthis._initControlPos();\r\n\t\t}\r\n\t},\r\n\r\n\t_initPanes: function () {\r\n\t\tvar panes = this._panes = {};\r\n\t\tthis._paneRenderers = {};\r\n\r\n\t\t// @section\r\n\t\t//\r\n\t\t// Panes are DOM elements used to control the ordering of layers on the map. You\r\n\t\t// can access panes with [`map.getPane`](#map-getpane) or\r\n\t\t// [`map.getPanes`](#map-getpanes) methods. New panes can be created with the\r\n\t\t// [`map.createPane`](#map-createpane) method.\r\n\t\t//\r\n\t\t// Every map has the following default panes that differ only in zIndex.\r\n\t\t//\r\n\t\t// @pane mapPane: HTMLElement = 'auto'\r\n\t\t// Pane that contains all other map panes\r\n\r\n\t\tthis._mapPane = this.createPane('mapPane', this._container);\r\n\t\tDomUtil.setPosition(this._mapPane, new Point(0, 0));\r\n\r\n\t\t// @pane tilePane: HTMLElement = 200\r\n\t\t// Pane for `GridLayer`s and `TileLayer`s\r\n\t\tthis.createPane('tilePane');\r\n\t\t// @pane overlayPane: HTMLElement = 400\r\n\t\t// Pane for vectors (`Path`s, like `Polyline`s and `Polygon`s), `ImageOverlay`s and `VideoOverlay`s\r\n\t\tthis.createPane('overlayPane');\r\n\t\t// @pane shadowPane: HTMLElement = 500\r\n\t\t// Pane for overlay shadows (e.g. `Marker` shadows)\r\n\t\tthis.createPane('shadowPane');\r\n\t\t// @pane markerPane: HTMLElement = 600\r\n\t\t// Pane for `Icon`s of `Marker`s\r\n\t\tthis.createPane('markerPane');\r\n\t\t// @pane tooltipPane: HTMLElement = 650\r\n\t\t// Pane for `Tooltip`s.\r\n\t\tthis.createPane('tooltipPane');\r\n\t\t// @pane popupPane: HTMLElement = 700\r\n\t\t// Pane for `Popup`s.\r\n\t\tthis.createPane('popupPane');\r\n\r\n\t\tif (!this.options.markerZoomAnimation) {\r\n\t\t\tDomUtil.addClass(panes.markerPane, 'leaflet-zoom-hide');\r\n\t\t\tDomUtil.addClass(panes.shadowPane, 'leaflet-zoom-hide');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// private methods that modify map state\r\n\r\n\t// @section Map state change events\r\n\t_resetView: function (center, zoom, noMoveStart) {\r\n\t\tDomUtil.setPosition(this._mapPane, new Point(0, 0));\r\n\r\n\t\tvar loading = !this._loaded;\r\n\t\tthis._loaded = true;\r\n\t\tzoom = this._limitZoom(zoom);\r\n\r\n\t\tthis.fire('viewprereset');\r\n\r\n\t\tvar zoomChanged = this._zoom !== zoom;\r\n\t\tthis\r\n\t\t\t._moveStart(zoomChanged, noMoveStart)\r\n\t\t\t._move(center, zoom)\r\n\t\t\t._moveEnd(zoomChanged);\r\n\r\n\t\t// @event viewreset: Event\r\n\t\t// Fired when the map needs to redraw its content (this usually happens\r\n\t\t// on map zoom or load). Very useful for creating custom overlays.\r\n\t\tthis.fire('viewreset');\r\n\r\n\t\t// @event load: Event\r\n\t\t// Fired when the map is initialized (when its center and zoom are set\r\n\t\t// for the first time).\r\n\t\tif (loading) {\r\n\t\t\tthis.fire('load');\r\n\t\t}\r\n\t},\r\n\r\n\t_moveStart: function (zoomChanged, noMoveStart) {\r\n\t\t// @event zoomstart: Event\r\n\t\t// Fired when the map zoom is about to change (e.g. before zoom animation).\r\n\t\t// @event movestart: Event\r\n\t\t// Fired when the view of the map starts changing (e.g. user starts dragging the map).\r\n\t\tif (zoomChanged) {\r\n\t\t\tthis.fire('zoomstart');\r\n\t\t}\r\n\t\tif (!noMoveStart) {\r\n\t\t\tthis.fire('movestart');\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_move: function (center, zoom, data, supressEvent) {\r\n\t\tif (zoom === undefined) {\r\n\t\t\tzoom = this._zoom;\r\n\t\t}\r\n\t\tvar zoomChanged = this._zoom !== zoom;\r\n\r\n\t\tthis._zoom = zoom;\r\n\t\tthis._lastCenter = center;\r\n\t\tthis._pixelOrigin = this._getNewPixelOrigin(center);\r\n\r\n\t\tif (!supressEvent) {\r\n\t\t\t// @event zoom: Event\r\n\t\t\t// Fired repeatedly during any change in zoom level,\r\n\t\t\t// including zoom and fly animations.\r\n\t\t\tif (zoomChanged || (data && data.pinch)) {\t// Always fire 'zoom' if pinching because #3530\r\n\t\t\t\tthis.fire('zoom', data);\r\n\t\t\t}\r\n\r\n\t\t\t// @event move: Event\r\n\t\t\t// Fired repeatedly during any movement of the map,\r\n\t\t\t// including pan and fly animations.\r\n\t\t\tthis.fire('move', data);\r\n\t\t} else if (data && data.pinch) {\t// Always fire 'zoom' if pinching because #3530\r\n\t\t\tthis.fire('zoom', data);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_moveEnd: function (zoomChanged) {\r\n\t\t// @event zoomend: Event\r\n\t\t// Fired when the map zoom changed, after any animations.\r\n\t\tif (zoomChanged) {\r\n\t\t\tthis.fire('zoomend');\r\n\t\t}\r\n\r\n\t\t// @event moveend: Event\r\n\t\t// Fired when the center of the map stops changing\r\n\t\t// (e.g. user stopped dragging the map or after non-centered zoom).\r\n\t\treturn this.fire('moveend');\r\n\t},\r\n\r\n\t_stop: function () {\r\n\t\tUtil.cancelAnimFrame(this._flyToFrame);\r\n\t\tif (this._panAnim) {\r\n\t\t\tthis._panAnim.stop();\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_rawPanBy: function (offset) {\r\n\t\tDomUtil.setPosition(this._mapPane, this._getMapPanePos().subtract(offset));\r\n\t},\r\n\r\n\t_getZoomSpan: function () {\r\n\t\treturn this.getMaxZoom() - this.getMinZoom();\r\n\t},\r\n\r\n\t_panInsideMaxBounds: function () {\r\n\t\tif (!this._enforcingBounds) {\r\n\t\t\tthis.panInsideBounds(this.options.maxBounds);\r\n\t\t}\r\n\t},\r\n\r\n\t_checkIfLoaded: function () {\r\n\t\tif (!this._loaded) {\r\n\t\t\tthrow new Error('Set map center and zoom first.');\r\n\t\t}\r\n\t},\r\n\r\n\t// DOM event handling\r\n\r\n\t// @section Interaction events\r\n\t_initEvents: function (remove) {\r\n\t\tthis._targets = {};\r\n\t\tthis._targets[Util.stamp(this._container)] = this;\r\n\r\n\t\tvar onOff = remove ? DomEvent.off : DomEvent.on;\r\n\r\n\t\t// @event click: MouseEvent\r\n\t\t// Fired when the user clicks (or taps) the map.\r\n\t\t// @event dblclick: MouseEvent\r\n\t\t// Fired when the user double-clicks (or double-taps) the map.\r\n\t\t// @event mousedown: MouseEvent\r\n\t\t// Fired when the user pushes the mouse button on the map.\r\n\t\t// @event mouseup: MouseEvent\r\n\t\t// Fired when the user releases the mouse button on the map.\r\n\t\t// @event mouseover: MouseEvent\r\n\t\t// Fired when the mouse enters the map.\r\n\t\t// @event mouseout: MouseEvent\r\n\t\t// Fired when the mouse leaves the map.\r\n\t\t// @event mousemove: MouseEvent\r\n\t\t// Fired while the mouse moves over the map.\r\n\t\t// @event contextmenu: MouseEvent\r\n\t\t// Fired when the user pushes the right mouse button on the map, prevents\r\n\t\t// default browser context menu from showing if there are listeners on\r\n\t\t// this event. Also fired on mobile when the user holds a single touch\r\n\t\t// for a second (also called long press).\r\n\t\t// @event keypress: KeyboardEvent\r\n\t\t// Fired when the user presses a key from the keyboard that produces a character value while the map is focused.\r\n\t\t// @event keydown: KeyboardEvent\r\n\t\t// Fired when the user presses a key from the keyboard while the map is focused. Unlike the `keypress` event,\r\n\t\t// the `keydown` event is fired for keys that produce a character value and for keys\r\n\t\t// that do not produce a character value.\r\n\t\t// @event keyup: KeyboardEvent\r\n\t\t// Fired when the user releases a key from the keyboard while the map is focused.\r\n\t\tonOff(this._container, 'click dblclick mousedown mouseup ' +\r\n\t\t\t'mouseover mouseout mousemove contextmenu keypress keydown keyup', this._handleDOMEvent, this);\r\n\r\n\t\tif (this.options.trackResize) {\r\n\t\t\tonOff(window, 'resize', this._onResize, this);\r\n\t\t}\r\n\r\n\t\tif (Browser.any3d && this.options.transform3DLimit) {\r\n\t\t\t(remove ? this.off : this.on).call(this, 'moveend', this._onMoveEnd);\r\n\t\t}\r\n\t},\r\n\r\n\t_onResize: function () {\r\n\t\tUtil.cancelAnimFrame(this._resizeRequest);\r\n\t\tthis._resizeRequest = Util.requestAnimFrame(\r\n\t\t        function () { this.invalidateSize({debounceMoveend: true}); }, this);\r\n\t},\r\n\r\n\t_onScroll: function () {\r\n\t\tthis._container.scrollTop  = 0;\r\n\t\tthis._container.scrollLeft = 0;\r\n\t},\r\n\r\n\t_onMoveEnd: function () {\r\n\t\tvar pos = this._getMapPanePos();\r\n\t\tif (Math.max(Math.abs(pos.x), Math.abs(pos.y)) >= this.options.transform3DLimit) {\r\n\t\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=1203873 but Webkit also have\r\n\t\t\t// a pixel offset on very high values, see: https://jsfiddle.net/dg6r5hhb/\r\n\t\t\tthis._resetView(this.getCenter(), this.getZoom());\r\n\t\t}\r\n\t},\r\n\r\n\t_findEventTargets: function (e, type) {\r\n\t\tvar targets = [],\r\n\t\t    target,\r\n\t\t    isHover = type === 'mouseout' || type === 'mouseover',\r\n\t\t    src = e.target || e.srcElement,\r\n\t\t    dragging = false;\r\n\r\n\t\twhile (src) {\r\n\t\t\ttarget = this._targets[Util.stamp(src)];\r\n\t\t\tif (target && (type === 'click' || type === 'preclick') && this._draggableMoved(target)) {\r\n\t\t\t\t// Prevent firing click after you just dragged an object.\r\n\t\t\t\tdragging = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (target && target.listens(type, true)) {\r\n\t\t\t\tif (isHover && !DomEvent.isExternalTarget(src, e)) { break; }\r\n\t\t\t\ttargets.push(target);\r\n\t\t\t\tif (isHover) { break; }\r\n\t\t\t}\r\n\t\t\tif (src === this._container) { break; }\r\n\t\t\tsrc = src.parentNode;\r\n\t\t}\r\n\t\tif (!targets.length && !dragging && !isHover && this.listens(type, true)) {\r\n\t\t\ttargets = [this];\r\n\t\t}\r\n\t\treturn targets;\r\n\t},\r\n\r\n\t_isClickDisabled: function (el) {\r\n\t\twhile (el && el !== this._container) {\r\n\t\t\tif (el['_leaflet_disable_click']) { return true; }\r\n\t\t\tel = el.parentNode;\r\n\t\t}\r\n\t},\r\n\r\n\t_handleDOMEvent: function (e) {\r\n\t\tvar el = (e.target || e.srcElement);\r\n\t\tif (!this._loaded || el['_leaflet_disable_events'] || e.type === 'click' && this._isClickDisabled(el)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar type = e.type;\r\n\r\n\t\tif (type === 'mousedown') {\r\n\t\t\t// prevents outline when clicking on keyboard-focusable element\r\n\t\t\tDomUtil.preventOutline(el);\r\n\t\t}\r\n\r\n\t\tthis._fireDOMEvent(e, type);\r\n\t},\r\n\r\n\t_mouseEvents: ['click', 'dblclick', 'mouseover', 'mouseout', 'contextmenu'],\r\n\r\n\t_fireDOMEvent: function (e, type, canvasTargets) {\r\n\r\n\t\tif (e.type === 'click') {\r\n\t\t\t// Fire a synthetic 'preclick' event which propagates up (mainly for closing popups).\r\n\t\t\t// @event preclick: MouseEvent\r\n\t\t\t// Fired before mouse click on the map (sometimes useful when you\r\n\t\t\t// want something to happen on click before any existing click\r\n\t\t\t// handlers start running).\r\n\t\t\tvar synth = Util.extend({}, e);\r\n\t\t\tsynth.type = 'preclick';\r\n\t\t\tthis._fireDOMEvent(synth, synth.type, canvasTargets);\r\n\t\t}\r\n\r\n\t\t// Find the layer the event is propagating from and its parents.\r\n\t\tvar targets = this._findEventTargets(e, type);\r\n\r\n\t\tif (canvasTargets) {\r\n\t\t\tvar filtered = []; // pick only targets with listeners\r\n\t\t\tfor (var i = 0; i < canvasTargets.length; i++) {\r\n\t\t\t\tif (canvasTargets[i].listens(type, true)) {\r\n\t\t\t\t\tfiltered.push(canvasTargets[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttargets = filtered.concat(targets);\r\n\t\t}\r\n\r\n\t\tif (!targets.length) { return; }\r\n\r\n\t\tif (type === 'contextmenu') {\r\n\t\t\tDomEvent.preventDefault(e);\r\n\t\t}\r\n\r\n\t\tvar target = targets[0];\r\n\t\tvar data = {\r\n\t\t\toriginalEvent: e\r\n\t\t};\r\n\r\n\t\tif (e.type !== 'keypress' && e.type !== 'keydown' && e.type !== 'keyup') {\r\n\t\t\tvar isMarker = target.getLatLng && (!target._radius || target._radius <= 10);\r\n\t\t\tdata.containerPoint = isMarker ?\r\n\t\t\t\tthis.latLngToContainerPoint(target.getLatLng()) : this.mouseEventToContainerPoint(e);\r\n\t\t\tdata.layerPoint = this.containerPointToLayerPoint(data.containerPoint);\r\n\t\t\tdata.latlng = isMarker ? target.getLatLng() : this.layerPointToLatLng(data.layerPoint);\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < targets.length; i++) {\r\n\t\t\ttargets[i].fire(type, data, true);\r\n\t\t\tif (data.originalEvent._stopped ||\r\n\t\t\t\t(targets[i].options.bubblingMouseEvents === false && Util.indexOf(this._mouseEvents, type) !== -1)) { return; }\r\n\t\t}\r\n\t},\r\n\r\n\t_draggableMoved: function (obj) {\r\n\t\tobj = obj.dragging && obj.dragging.enabled() ? obj : this;\r\n\t\treturn (obj.dragging && obj.dragging.moved()) || (this.boxZoom && this.boxZoom.moved());\r\n\t},\r\n\r\n\t_clearHandlers: function () {\r\n\t\tfor (var i = 0, len = this._handlers.length; i < len; i++) {\r\n\t\t\tthis._handlers[i].disable();\r\n\t\t}\r\n\t},\r\n\r\n\t// @section Other Methods\r\n\r\n\t// @method whenReady(fn: Function, context?: Object): this\r\n\t// Runs the given function `fn` when the map gets initialized with\r\n\t// a view (center and zoom) and at least one layer, or immediately\r\n\t// if it's already initialized, optionally passing a function context.\r\n\twhenReady: function (callback, context) {\r\n\t\tif (this._loaded) {\r\n\t\t\tcallback.call(context || this, {target: this});\r\n\t\t} else {\r\n\t\t\tthis.on('load', callback, context);\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n\r\n\t// private methods for getting map state\r\n\r\n\t_getMapPanePos: function () {\r\n\t\treturn DomUtil.getPosition(this._mapPane) || new Point(0, 0);\r\n\t},\r\n\r\n\t_moved: function () {\r\n\t\tvar pos = this._getMapPanePos();\r\n\t\treturn pos && !pos.equals([0, 0]);\r\n\t},\r\n\r\n\t_getTopLeftPoint: function (center, zoom) {\r\n\t\tvar pixelOrigin = center && zoom !== undefined ?\r\n\t\t\tthis._getNewPixelOrigin(center, zoom) :\r\n\t\t\tthis.getPixelOrigin();\r\n\t\treturn pixelOrigin.subtract(this._getMapPanePos());\r\n\t},\r\n\r\n\t_getNewPixelOrigin: function (center, zoom) {\r\n\t\tvar viewHalf = this.getSize()._divideBy(2);\r\n\t\treturn this.project(center, zoom)._subtract(viewHalf)._add(this._getMapPanePos())._round();\r\n\t},\r\n\r\n\t_latLngToNewLayerPoint: function (latlng, zoom, center) {\r\n\t\tvar topLeft = this._getNewPixelOrigin(center, zoom);\r\n\t\treturn this.project(latlng, zoom)._subtract(topLeft);\r\n\t},\r\n\r\n\t_latLngBoundsToNewLayerBounds: function (latLngBounds, zoom, center) {\r\n\t\tvar topLeft = this._getNewPixelOrigin(center, zoom);\r\n\t\treturn toBounds([\r\n\t\t\tthis.project(latLngBounds.getSouthWest(), zoom)._subtract(topLeft),\r\n\t\t\tthis.project(latLngBounds.getNorthWest(), zoom)._subtract(topLeft),\r\n\t\t\tthis.project(latLngBounds.getSouthEast(), zoom)._subtract(topLeft),\r\n\t\t\tthis.project(latLngBounds.getNorthEast(), zoom)._subtract(topLeft)\r\n\t\t]);\r\n\t},\r\n\r\n\t// layer point of the current center\r\n\t_getCenterLayerPoint: function () {\r\n\t\treturn this.containerPointToLayerPoint(this.getSize()._divideBy(2));\r\n\t},\r\n\r\n\t// offset of the specified place to the current center in pixels\r\n\t_getCenterOffset: function (latlng) {\r\n\t\treturn this.latLngToLayerPoint(latlng).subtract(this._getCenterLayerPoint());\r\n\t},\r\n\r\n\t// adjust center for view to get inside bounds\r\n\t_limitCenter: function (center, zoom, bounds) {\r\n\r\n\t\tif (!bounds) { return center; }\r\n\r\n\t\tvar centerPoint = this.project(center, zoom),\r\n\t\t    viewHalf = this.getSize().divideBy(2),\r\n\t\t    viewBounds = new Bounds(centerPoint.subtract(viewHalf), centerPoint.add(viewHalf)),\r\n\t\t    offset = this._getBoundsOffset(viewBounds, bounds, zoom);\r\n\r\n\t\t// If offset is less than a pixel, ignore.\r\n\t\t// This prevents unstable projections from getting into\r\n\t\t// an infinite loop of tiny offsets.\r\n\t\tif (Math.abs(offset.x) <= 1 && Math.abs(offset.y) <= 1) {\r\n\t\t\treturn center;\r\n\t\t}\r\n\r\n\t\treturn this.unproject(centerPoint.add(offset), zoom);\r\n\t},\r\n\r\n\t// adjust offset for view to get inside bounds\r\n\t_limitOffset: function (offset, bounds) {\r\n\t\tif (!bounds) { return offset; }\r\n\r\n\t\tvar viewBounds = this.getPixelBounds(),\r\n\t\t    newBounds = new Bounds(viewBounds.min.add(offset), viewBounds.max.add(offset));\r\n\r\n\t\treturn offset.add(this._getBoundsOffset(newBounds, bounds));\r\n\t},\r\n\r\n\t// returns offset needed for pxBounds to get inside maxBounds at a specified zoom\r\n\t_getBoundsOffset: function (pxBounds, maxBounds, zoom) {\r\n\t\tvar projectedMaxBounds = toBounds(\r\n\t\t        this.project(maxBounds.getNorthEast(), zoom),\r\n\t\t        this.project(maxBounds.getSouthWest(), zoom)\r\n\t\t    ),\r\n\t\t    minOffset = projectedMaxBounds.min.subtract(pxBounds.min),\r\n\t\t    maxOffset = projectedMaxBounds.max.subtract(pxBounds.max),\r\n\r\n\t\t    dx = this._rebound(minOffset.x, -maxOffset.x),\r\n\t\t    dy = this._rebound(minOffset.y, -maxOffset.y);\r\n\r\n\t\treturn new Point(dx, dy);\r\n\t},\r\n\r\n\t_rebound: function (left, right) {\r\n\t\treturn left + right > 0 ?\r\n\t\t\tMath.round(left - right) / 2 :\r\n\t\t\tMath.max(0, Math.ceil(left)) - Math.max(0, Math.floor(right));\r\n\t},\r\n\r\n\t_limitZoom: function (zoom) {\r\n\t\tvar min = this.getMinZoom(),\r\n\t\t    max = this.getMaxZoom(),\r\n\t\t    snap = Browser.any3d ? this.options.zoomSnap : 1;\r\n\t\tif (snap) {\r\n\t\t\tzoom = Math.round(zoom / snap) * snap;\r\n\t\t}\r\n\t\treturn Math.max(min, Math.min(max, zoom));\r\n\t},\r\n\r\n\t_onPanTransitionStep: function () {\r\n\t\tthis.fire('move');\r\n\t},\r\n\r\n\t_onPanTransitionEnd: function () {\r\n\t\tDomUtil.removeClass(this._mapPane, 'leaflet-pan-anim');\r\n\t\tthis.fire('moveend');\r\n\t},\r\n\r\n\t_tryAnimatedPan: function (center, options) {\r\n\t\t// difference between the new and current centers in pixels\r\n\t\tvar offset = this._getCenterOffset(center)._trunc();\r\n\r\n\t\t// don't animate too far unless animate: true specified in options\r\n\t\tif ((options && options.animate) !== true && !this.getSize().contains(offset)) { return false; }\r\n\r\n\t\tthis.panBy(offset, options);\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_createAnimProxy: function () {\r\n\r\n\t\tvar proxy = this._proxy = DomUtil.create('div', 'leaflet-proxy leaflet-zoom-animated');\r\n\t\tthis._panes.mapPane.appendChild(proxy);\r\n\r\n\t\tthis.on('zoomanim', function (e) {\r\n\t\t\tvar prop = DomUtil.TRANSFORM,\r\n\t\t\t    transform = this._proxy.style[prop];\r\n\r\n\t\t\tDomUtil.setTransform(this._proxy, this.project(e.center, e.zoom), this.getZoomScale(e.zoom, 1));\r\n\r\n\t\t\t// workaround for case when transform is the same and so transitionend event is not fired\r\n\t\t\tif (transform === this._proxy.style[prop] && this._animatingZoom) {\r\n\t\t\t\tthis._onZoomTransitionEnd();\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\tthis.on('load moveend', this._animMoveEnd, this);\r\n\r\n\t\tthis._on('unload', this._destroyAnimProxy, this);\r\n\t},\r\n\r\n\t_destroyAnimProxy: function () {\r\n\t\tDomUtil.remove(this._proxy);\r\n\t\tthis.off('load moveend', this._animMoveEnd, this);\r\n\t\tdelete this._proxy;\r\n\t},\r\n\r\n\t_animMoveEnd: function () {\r\n\t\tvar c = this.getCenter(),\r\n\t\t    z = this.getZoom();\r\n\t\tDomUtil.setTransform(this._proxy, this.project(c, z), this.getZoomScale(z, 1));\r\n\t},\r\n\r\n\t_catchTransitionEnd: function (e) {\r\n\t\tif (this._animatingZoom && e.propertyName.indexOf('transform') >= 0) {\r\n\t\t\tthis._onZoomTransitionEnd();\r\n\t\t}\r\n\t},\r\n\r\n\t_nothingToAnimate: function () {\r\n\t\treturn !this._container.getElementsByClassName('leaflet-zoom-animated').length;\r\n\t},\r\n\r\n\t_tryAnimatedZoom: function (center, zoom, options) {\r\n\r\n\t\tif (this._animatingZoom) { return true; }\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\t// don't animate if disabled, not supported or zoom difference is too large\r\n\t\tif (!this._zoomAnimated || options.animate === false || this._nothingToAnimate() ||\r\n\t\t        Math.abs(zoom - this._zoom) > this.options.zoomAnimationThreshold) { return false; }\r\n\r\n\t\t// offset is the pixel coords of the zoom origin relative to the current center\r\n\t\tvar scale = this.getZoomScale(zoom),\r\n\t\t    offset = this._getCenterOffset(center)._divideBy(1 - 1 / scale);\r\n\r\n\t\t// don't animate if the zoom origin isn't within one screen from the current center, unless forced\r\n\t\tif (options.animate !== true && !this.getSize().contains(offset)) { return false; }\r\n\r\n\t\tUtil.requestAnimFrame(function () {\r\n\t\t\tthis\r\n\t\t\t    ._moveStart(true, options.noMoveStart || false)\r\n\t\t\t    ._animateZoom(center, zoom, true);\r\n\t\t}, this);\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t_animateZoom: function (center, zoom, startAnim, noUpdate) {\r\n\t\tif (!this._mapPane) { return; }\r\n\r\n\t\tif (startAnim) {\r\n\t\t\tthis._animatingZoom = true;\r\n\r\n\t\t\t// remember what center/zoom to set after animation\r\n\t\t\tthis._animateToCenter = center;\r\n\t\t\tthis._animateToZoom = zoom;\r\n\r\n\t\t\tDomUtil.addClass(this._mapPane, 'leaflet-zoom-anim');\r\n\t\t}\r\n\r\n\t\t// @section Other Events\r\n\t\t// @event zoomanim: ZoomAnimEvent\r\n\t\t// Fired at least once per zoom animation. For continuous zoom, like pinch zooming, fired once per frame during zoom.\r\n\t\tthis.fire('zoomanim', {\r\n\t\t\tcenter: center,\r\n\t\t\tzoom: zoom,\r\n\t\t\tnoUpdate: noUpdate\r\n\t\t});\r\n\r\n\t\tif (!this._tempFireZoomEvent) {\r\n\t\t\tthis._tempFireZoomEvent = this._zoom !== this._animateToZoom;\r\n\t\t}\r\n\r\n\t\tthis._move(this._animateToCenter, this._animateToZoom, undefined, true);\r\n\r\n\t\t// Work around webkit not firing 'transitionend', see https://github.com/Leaflet/Leaflet/issues/3689, 2693\r\n\t\tsetTimeout(Util.bind(this._onZoomTransitionEnd, this), 250);\r\n\t},\r\n\r\n\t_onZoomTransitionEnd: function () {\r\n\t\tif (!this._animatingZoom) { return; }\r\n\r\n\t\tif (this._mapPane) {\r\n\t\t\tDomUtil.removeClass(this._mapPane, 'leaflet-zoom-anim');\r\n\t\t}\r\n\r\n\t\tthis._animatingZoom = false;\r\n\r\n\t\tthis._move(this._animateToCenter, this._animateToZoom, undefined, true);\r\n\r\n\t\tif (this._tempFireZoomEvent) {\r\n\t\t\tthis.fire('zoom');\r\n\t\t}\r\n\t\tdelete this._tempFireZoomEvent;\r\n\r\n\t\tthis.fire('move');\r\n\r\n\t\tthis._moveEnd(true);\r\n\t}\r\n});\r\n\r\n// @section\r\n\r\n// @factory L.map(id: String, options?: Map options)\r\n// Instantiates a map object given the DOM ID of a `<div>` element\r\n// and optionally an object literal with `Map options`.\r\n//\r\n// @alternative\r\n// @factory L.map(el: HTMLElement, options?: Map options)\r\n// Instantiates a map object given an instance of a `<div>` HTML element\r\n// and optionally an object literal with `Map options`.\r\nexport function createMap(id, options) {\r\n\treturn new Map(id, options);\r\n}\r\n", "\r\nimport {Class} from '../core/Class';\r\nimport {Map} from '../map/Map';\r\nimport * as Util from '../core/Util';\r\nimport * as DomUtil from '../dom/DomUtil';\r\n\r\n/*\r\n * @class Control\r\n * @aka L.Control\r\n * @inherits Class\r\n *\r\n * L.Control is a base class for implementing map controls. Handles positioning.\r\n * All other controls extend from this class.\r\n */\r\n\r\nexport var Control = Class.extend({\r\n\t// @section\r\n\t// @aka Control Options\r\n\toptions: {\r\n\t\t// @option position: String = 'topright'\r\n\t\t// The position of the control (one of the map corners). Possible values are `'topleft'`,\r\n\t\t// `'topright'`, `'bottomleft'` or `'bottomright'`\r\n\t\tposition: 'topright'\r\n\t},\r\n\r\n\tinitialize: function (options) {\r\n\t\tUtil.setOptions(this, options);\r\n\t},\r\n\r\n\t/* @section\r\n\t * Classes extending L.Control will inherit the following methods:\r\n\t *\r\n\t * @method getPosition: string\r\n\t * Returns the position of the control.\r\n\t */\r\n\tgetPosition: function () {\r\n\t\treturn this.options.position;\r\n\t},\r\n\r\n\t// @method setPosition(position: string): this\r\n\t// Sets the position of the control.\r\n\tsetPosition: function (position) {\r\n\t\tvar map = this._map;\r\n\r\n\t\tif (map) {\r\n\t\t\tmap.removeControl(this);\r\n\t\t}\r\n\r\n\t\tthis.options.position = position;\r\n\r\n\t\tif (map) {\r\n\t\t\tmap.addControl(this);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method getContainer: HTMLElement\r\n\t// Returns the HTMLElement that contains the control.\r\n\tgetContainer: function () {\r\n\t\treturn this._container;\r\n\t},\r\n\r\n\t// @method addTo(map: Map): this\r\n\t// Adds the control to the given map.\r\n\taddTo: function (map) {\r\n\t\tthis.remove();\r\n\t\tthis._map = map;\r\n\r\n\t\tvar container = this._container = this.onAdd(map),\r\n\t\t    pos = this.getPosition(),\r\n\t\t    corner = map._controlCorners[pos];\r\n\r\n\t\tDomUtil.addClass(container, 'leaflet-control');\r\n\r\n\t\tif (pos.indexOf('bottom') !== -1) {\r\n\t\t\tcorner.insertBefore(container, corner.firstChild);\r\n\t\t} else {\r\n\t\t\tcorner.appendChild(container);\r\n\t\t}\r\n\r\n\t\tthis._map.on('unload', this.remove, this);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method remove: this\r\n\t// Removes the control from the map it is currently active on.\r\n\tremove: function () {\r\n\t\tif (!this._map) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tDomUtil.remove(this._container);\r\n\r\n\t\tif (this.onRemove) {\r\n\t\t\tthis.onRemove(this._map);\r\n\t\t}\r\n\r\n\t\tthis._map.off('unload', this.remove, this);\r\n\t\tthis._map = null;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_refocusOnMap: function (e) {\r\n\t\t// if map exists and event is not a keyboard event\r\n\t\tif (this._map && e && e.screenX > 0 && e.screenY > 0) {\r\n\t\t\tthis._map.getContainer().focus();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport var control = function (options) {\r\n\treturn new Control(options);\r\n};\r\n\r\n/* @section Extension methods\r\n * @uninheritable\r\n *\r\n * Every control should extend from `L.Control` and (re-)implement the following methods.\r\n *\r\n * @method onAdd(map: Map): HTMLElement\r\n * Should return the container DOM element for the control and add listeners on relevant map events. Called on [`control.addTo(map)`](#control-addTo).\r\n *\r\n * @method onRemove(map: Map)\r\n * Optional method. Should contain all clean up code that removes the listeners previously added in [`onAdd`](#control-onadd). Called on [`control.remove()`](#control-remove).\r\n */\r\n\r\n/* @namespace Map\r\n * @section Methods for Layers and Controls\r\n */\r\nMap.include({\r\n\t// @method addControl(control: Control): this\r\n\t// Adds the given control to the map\r\n\taddControl: function (control) {\r\n\t\tcontrol.addTo(this);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t// @method removeControl(control: Control): this\r\n\t// Removes the given control from the map\r\n\tremoveControl: function (control) {\r\n\t\tcontrol.remove();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_initControlPos: function () {\r\n\t\tvar corners = this._controlCorners = {},\r\n\t\t    l = 'leaflet-',\r\n\t\t    container = this._controlContainer =\r\n\t\t            DomUtil.create('div', l + 'control-container', this._container);\r\n\r\n\t\tfunction createCorner(vSide, hSide) {\r\n\t\t\tvar className = l + vSide + ' ' + l + hSide;\r\n\r\n\t\t\tcorners[vSide + hSide] = DomUtil.create('div', className, container);\r\n\t\t}\r\n\r\n\t\tcreateCorner('top', 'left');\r\n\t\tcreateCorner('top', 'right');\r\n\t\tcreateCorner('bottom', 'left');\r\n\t\tcreateCorner('bottom', 'right');\r\n\t},\r\n\r\n\t_clearControlPos: function () {\r\n\t\tfor (var i in this._controlCorners) {\r\n\t\t\tDomUtil.remove(this._controlCorners[i]);\r\n\t\t}\r\n\t\tDomUtil.remove(this._controlContainer);\r\n\t\tdelete this._controlCorners;\r\n\t\tdelete this._controlContainer;\r\n\t}\r\n});\r\n", "\r\nimport {Control} from './Control';\r\nimport {Map} from '../map/Map';\r\nimport * as DomUtil from '../dom/DomUtil';\r\nimport * as DomEvent from '../dom/DomEvent';\r\n\r\n/*\r\n * @class Control.Zoom\r\n * @aka L.Control.Zoom\r\n * @inherits Control\r\n *\r\n * A basic zoom control with two buttons (zoom in and zoom out). It is put on the map by default unless you set its [`zoomControl` option](#map-zoomcontrol) to `false`. Extends `Control`.\r\n */\r\n\r\nexport var Zoom = Control.extend({\r\n\t// @section\r\n\t// @aka Control.Zoom options\r\n\toptions: {\r\n\t\tposition: 'topleft',\r\n\r\n\t\t// @option zoomInText: String = '<span aria-hidden=\"true\">+</span>'\r\n\t\t// The text set on the 'zoom in' button.\r\n\t\tzoomInText: '<span aria-hidden=\"true\">+</span>',\r\n\r\n\t\t// @option zoomInTitle: String = 'Zoom in'\r\n\t\t// The title set on the 'zoom in' button.\r\n\t\tzoomInTitle: 'Zoom in',\r\n\r\n\t\t// @option zoomOutText: String = '<span aria-hidden=\"true\">&#x2212;</span>'\r\n\t\t// The text set on the 'zoom out' button.\r\n\t\tzoomOutText: '<span aria-hidden=\"true\">&#x2212;</span>',\r\n\r\n\t\t// @option zoomOutTitle: String = 'Zoom out'\r\n\t\t// The title set on the 'zoom out' button.\r\n\t\tzoomOutTitle: 'Zoom out'\r\n\t},\r\n\r\n\tonAdd: function (map) {\r\n\t\tvar zoomName = 'leaflet-control-zoom',\r\n\t\t    container = DomUtil.create('div', zoomName + ' leaflet-bar'),\r\n\t\t    options = this.options;\r\n\r\n\t\tthis._zoomInButton  = this._createButton(options.zoomInText, options.zoomInTitle,\r\n\t\t        zoomName + '-in',  container, this._zoomIn);\r\n\t\tthis._zoomOutButton = this._createButton(options.zoomOutText, options.zoomOutTitle,\r\n\t\t        zoomName + '-out', container, this._zoomOut);\r\n\r\n\t\tthis._updateDisabled();\r\n\t\tmap.on('zoomend zoomlevelschange', this._updateDisabled, this);\r\n\r\n\t\treturn container;\r\n\t},\r\n\r\n\tonRemove: function (map) {\r\n\t\tmap.off('zoomend zoomlevelschange', this._updateDisabled, this);\r\n\t},\r\n\r\n\tdisable: function () {\r\n\t\tthis._disabled = true;\r\n\t\tthis._updateDisabled();\r\n\t\treturn this;\r\n\t},\r\n\r\n\tenable: function () {\r\n\t\tthis._disabled = false;\r\n\t\tthis._updateDisabled();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t_zoomIn: function (e) {\r\n\t\tif (!this._disabled && this._map._zoom < this._map.getMaxZoom()) {\r\n\t\t\tthis._map.zoomIn(this._map.options.zoomDelta * (e.shiftKey ? 3 : 1));\r\n\t\t}\r\n\t},\r\n\r\n\t_zoomOut: function (e) {\r\n\t\tif (!this._disabled && this._map._zoom > this._map.getMinZoom()) {\r\n\t\t\tthis._map.zoomOut(this._map.options.zoomDelta * (e.shiftKey ? 3 : 1));\r\n\t\t}\r\n\t},\r\n\r\n\t_createButton: function (html, title, className, container, fn) {\r\n\t\tvar link = DomUtil.create('a', className, container);\r\n\t\tlink.innerHTML = html;\r\n\t\tlink.href = '#';\r\n\t\tlink.title = title;\r\n\r\n\t\t/*\r\n\t\t * Will force screen readers like VoiceOver to read this as \"Zoom in - button\"\r\n\t\t */\r\n\t\tlink.setAttribute('role', 'button');\r\n\t\tlink.setAttribute('aria-label', title);\r\n\r\n\t\tDomEvent.disableClickPropagation(link);\r\n\t\tDomEvent.on(link, 'click', DomEvent.stop);\r\n\t\tDomEvent.on(link, 'click', fn, this);\r\n\t\tDomEvent.on(link, 'click', this._refocusOnMap, this);\r\n\r\n\t\treturn link;\r\n\t},\r\n\r\n\t_updateDisabled: function () {\r\n\t\tvar map = this._map,\r\n\t\t    className = 'leaflet-disabled';\r\n\r\n\t\tDomUtil.removeClass(this._zoomInButton, className);\r\n\t\tDomUtil.removeClass(this._zoomOutButton, className);\r\n\t\tthis._zoomInButton.setAttribute('aria-disabled', 'false');\r\n\t\tthis._zoomOutButton.setAttribute('aria-disabled', 'false');\r\n\r\n\t\tif (this._disabled || map._zoom === map.getMinZoom()) {\r\n\t\t\tDomUtil.addClass(this._zoomOutButton, className);\r\n\t\t\tthis._zoomOutButton.setAttribute('aria-disabled', 'true');\r\n\t\t}\r\n\t\tif (this._disabled || map._zoom === map.getMaxZoom()) {\r\n\t\t\tDomUtil.addClass(this._zoomInButton, className);\r\n\t\t\tthis._zoomInButton.setAttribute('aria-disabled', 'true');\r\n\t\t}\r\n\t}\r\n});\r\n\r\n// @namespace Map\r\n// @section Control options\r\n// @option zoomControl: Boolean = true\r\n// Whether a [zoom control](#control-zoom) is added to the map by default.\r\nMap.mergeOptions({\r\n\tzoomControl: true\r\n});\r\n\r\nMap.addInitHook(function () {\r\n\tif (this.options.zoomControl) {\r\n\t\t// @section Controls\r\n\t\t// @property zoomControl: Control.Zoom\r\n\t\t// The default zoom control (only available if the\r\n\t\t// [`zoomControl` option](#map-zoomcontrol) was `true` when creating the map).\r\n\t\tthis.zoomControl = new Zoom();\r\n\t\tthis.addControl(this.zoomControl);\r\n\t}\r\n});\r\n\r\n// @namespace Control.Zoom\r\n// @factory L.control.zoom(options: Control.Zoom options)\r\n// Creates a zoom control\r\nexport var zoom = function (options) {\r\n\treturn new Zoom(options);\r\n};\r\n"],
  "mappings": "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",
  "names": ["i", "zoom", "zoom", "create", "remove", "create", "create"]
}
